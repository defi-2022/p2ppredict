{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCanCreateMakerAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCanMatchAskWithBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCanOverrideMakerAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b506164f5806100316000396000f3fe60806040523480156200001157600080fd5b5060043610620001755760003560e01c80639a8325a011620000d3578063c88a5e6d1162000086578063c88a5e6d1462000307578063d06d8229146200031e578063d82555f11462000335578063e9a79a7b146200034c578063f8ccbf471462000363578063fa7626d4146200037757600080fd5b80639a8325a01462000293578063af9bbe5f14620002aa578063b82e287d14620002c1578063b9c071b414620002cb578063ba414fa614620002e2578063c2ddc81f14620002fd57600080fd5b80633a768463116200012c5780633a76846314620002165780633bf82db1146200022d5780636bce989b14620002445780636f597075146200025b5780637201130d146200027257806397754ae9146200027c57600080fd5b80630a9254e4146200017a578063108554f21462000186578063233240ee146200019d57806329a9e30014620001b457806329ce9dde14620001cb5780632d6c17a314620001ff575b600080fd5b6200018462000385565b005b62000184620001973660046200323a565b620008ce565b62000184620001ae36600462003269565b620009a7565b62000184620001c536600462003290565b62000a83565b620001e2620001dc366004620033a9565b62000b35565b6040516001600160a01b0390911681526020015b60405180910390f35b620001846200021036600462003429565b62000c65565b620001e26000805160206200648083398151915281565b620001846200023e36600462003443565b62000ca5565b620001846200025536600462003443565b62000d87565b620001846200026c36600462003269565b62000d9b565b6200018462000e45565b620001846200028d36600462003498565b6200112b565b620001e2620002a4366004620034f2565b6200136c565b62000184620002bb36600462003443565b6200146e565b620001846200151c565b62000184620002dc36600462003429565b620017ca565b620002ec620017eb565b6040519015158152602001620001f6565b620001846200191c565b62000184620003183660046200323a565b62001a75565b620001846200032f36600462003290565b62001aab565b620001846200034636600462003443565b62001b5d565b620001846200035d3660046200323a565b62001c54565b600054620002ec9062010000900460ff1681565b600054620002ec9060ff1681565b6040516200039390620031b7565b604051809103906000f080158015620003b0573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392909216919091179055604051620003df90620031c5565b604051809103906000f080158015620003fc573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b03929092169190911790556040516200042b90620031c5565b604051809103906000f08015801562000448573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b03928316179055600a54604051911690600090683635c9adc5dea000009082818181858883f193505050501580156200049b573d6000803e3d6000fd5b50600b546040516001600160a01b0390911690600090683635c9adc5dea000009082818181858883f19350505050158015620004db573d6000803e3d6000fd5b50600c80546001600160a01b031916600080516020620064808339815191521790556040516008906501d1a94a2000906200051690620031d3565b60ff90921682526020820152604001604051809103906000f08015801562000542573d6000803e3d6000fd5b50600d60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600864174876e8006040516200057f90620031d3565b60ff90921682526020820152604001604051809103906000f080158015620005ab573d6000803e3d6000fd5b50600e60006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060086404a817c800604051620005e890620031d3565b60ff90921682526020820152604001604051809103906000f08015801562000614573d6000803e3d6000fd5b50600f80546001600160a01b0319166001600160a01b03929092169190911790556040516200064390620031e1565b604051809103906000f08015801562000660573d6000803e3d6000fd5b50601080546001600160a01b0319166001600160a01b03928316908117909155600a5460405163755edd1760e01b8152921660048301529063755edd17906024016020604051808303816000875af1158015620006c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006e7919062003533565b601855600c54600a5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b1580156200073457600080fd5b505af115801562000749573d6000803e3d6000fd5b505060105460095460405163a22cb46560e01b81526001600160a01b039182166004820152600160248201529116925063a22cb4659150604401600060405180830381600087803b1580156200079e57600080fd5b505af1158015620007b3573d6000803e3d6000fd5b50506009546010546040516385edae4960e01b81526001600160a01b039182166004820152911692506385edae499150602401600060405180830381600087803b1580156200080157600080fd5b505af115801562000816573d6000803e3d6000fd5b50506040805161010080820183526001808352600a546001600160a01b0390811660208501819052670de0b6b3a7640000958501869052601854606086018190526000608087018190526103e860a08801819052600e5490941660c08801819052641bf08eb00060e0909801889052601180546001600160a81b0319169490970293909317909417909455601295909555601392909255601455601555601680546001600160a01b0319169092179091556017555050565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d906200090490859085906004016200354d565b600060405180830381600087803b1580156200091f57600080fd5b505af115801562000934573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03851660048201526000805160206200648083398151915292506306447d5691506024015b600060405180830381600087803b1580156200098a57600080fd5b505af11580156200099f573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d90620009e1908490600160801b906004016200354d565b600060405180830381600087803b158015620009fc57600080fd5b505af115801562000a11573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038416600482015260008051602062006480833981519152925063ca669fa791506024015b600060405180830381600087803b15801562000a6757600080fd5b505af115801562000a7c573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d9062000abd908590600160801b906004016200354d565b600060405180830381600087803b15801562000ad857600080fd5b505af115801562000aed573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038086166004830152841660248201526000805160206200648083398151915292506347e50cce91506044016200096f565b604051638d1cc92560e01b815260009081906000805160206200648083398151915290638d1cc9259062000b6e90879060040162003599565b6000604051808303816000875af115801562000b8e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000bb89190810190620035ce565b8360405160200162000bcc9291906200364e565b60405160208183030381529060405290508051602082016000f091506001600160a01b03821662000c5e5760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b6000805160206200648083398151915263e5d6bf0262000c86834262003697565b6040518263ffffffff1660e01b815260040162000a4c91815260200190565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d9062000cdb90869085906004016200354d565b600060405180830381600087803b15801562000cf657600080fd5b505af115801562000d0b573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038087166004830152851660248201526000805160206200648083398151915292506345b5607891506044015b600060405180830381600087803b15801562000d6957600080fd5b505af115801562000d7e573d6000803e3d6000fd5b50505050505050565b62000d9683838360006200112b565b505050565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d9062000dd5908490600160801b906004016200354d565b600060405180830381600087803b15801562000df057600080fd5b505af115801562000e05573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03841660048201526000805160206200648083398151915292506306447d56915060240162000a4c565b600c54600a546040516303223eab60e11b81526001600160a01b0391821660048201529116906306447d5690602401600060405180830381600087803b15801562000e8f57600080fd5b505af115801562000ea4573d6000803e3d6000fd5b5050600954604051634dc105c160e11b81526001600160a01b039091169250639b820b82915062000edb90601190600401620036b1565b600060405180830381600087803b15801562000ef657600080fd5b505af115801562000f0b573d6000803e3d6000fd5b5050600954601854604051636167087f60e11b81526004810191909152600093506001600160a01b03909116915063c2ce10fe9060240161010060405180830381865afa15801562000f61573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f87919062003720565b905062000fa18160400151670de0b6b3a764000062001cfa565b600954604080516101008101825260018152600a546001600160a01b0390811660208301908152674563918244f40000838501908152601854606085019081526000608086019081526103e860a08701908152600e54861660c08801908152641bf08eb00060e089019081529851634dc105c160e11b815297511515600489015294518616602488015292516044870152905160648601525160848501525160a484015251811660c4830152915160e4820152911690639b820b829061010401600060405180830381600087803b1580156200107c57600080fd5b505af115801562001091573d6000803e3d6000fd5b5050600954601854604051636167087f60e11b81526004810191909152600093506001600160a01b03909116915063c2ce10fe9060240161010060405180830381865afa158015620010e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200110d919062003720565b9050620011278160400151674563918244f4000062001cfa565b5050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916200118191620037d4565b6000604051808303816000865af19150503d8060008114620011c0576040519150601f19603f3d011682016040523d82523d6000602084013e620011c5565b606091505b50915050600081806020019051810190620011e1919062003533565b905062001253846200124c87620012236370a0823160e01b6200120660018d62001df1565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062001e16565b82156200099f5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916200129e9190620037d4565b6000604051808303816000865af19150503d8060008114620012dd576040519150601f19603f3d011682016040523d82523d6000602084013e620012e2565b606091505b50915050600081806020019051810190620012fe919062003533565b905082861015620013295762001315868462003697565b62001321908262003697565b905062001344565b62001335838762003697565b620013419082620037f2565b90505b62001362816200124c6318160ddd60e01b6200120660018d62001df1565b5050505050505050565b604051638d1cc92560e01b815260009081906000805160206200648083398151915290638d1cc92590620013a590869060040162003599565b6000604051808303816000875af1158015620013c5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620013ef9190810190620035ce565b90508051602082016000f091506001600160a01b038216620014685760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b606482015260840162000c55565b50919050565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d90620014a490869085906004016200354d565b600060405180830381600087803b158015620014bf57600080fd5b505af1158015620014d4573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038087166004830152851660248201526000805160206200648083398151915292506347e50cce915060440162000d4e565b600c54600a5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b1580156200156657600080fd5b505af11580156200157b573d6000803e3d6000fd5b5050600954604051634dc105c160e11b81526001600160a01b039091169250639b820b829150620015b290601190600401620036b1565b600060405180830381600087803b158015620015cd57600080fd5b505af1158015620015e2573d6000803e3d6000fd5b50506040805160808101825260008152600b546001600160a01b0390811660208301819052670de0b6b3a7640000838501526018546060840152600a54600c54945163ca669fa760e01b81526004810192909252929550918116319350919091169063ca669fa790602401600060405180830381600087803b1580156200166857600080fd5b505af11580156200167d573d6000803e3d6000fd5b505060095460408051636ebabba960e01b815286511515600482015260208701516001600160a01b0390811660248301529187015160448201526060870151606482015291169250636ebabba99150670de0b6b3a7640000906084016000604051808303818588803b158015620016f357600080fd5b505af115801562001708573d6000803e3d6000fd5b50506010546018546040516331a9108f60e11b81526200179e95506001600160a01b039092169350636352211e9250620017489160040190815260200190565b602060405180830381865afa15801562001766573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200178c91906200380d565b600b546001600160a01b031662001e22565b600a5462001127906001600160a01b031631620017c483670de0b6b3a7640000620037f2565b62001cfa565b6000805160206200648083398151915263e5d6bf0262000c868342620037f2565b60008054610100900460ff16156200180c5750600054610100900460ff1690565b6000600080516020620064808339815191523b15620019175760405160009060008051602062006480833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620018799083906519985a5b195960d21b906020016200354d565b60408051601f19818403018152908290526200189992916020016200382d565b60408051601f1981840301815290829052620018b591620037d4565b6000604051808303816000865af19150503d8060008114620018f4576040519150601f19603f3d011682016040523d82523d6000602084013e620018f9565b606091505b509150508080602001905181019062001913919062003860565b9150505b919050565b600c54600a5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b1580156200196657600080fd5b505af11580156200197b573d6000803e3d6000fd5b5050600954604051634dc105c160e11b81526001600160a01b039091169250639b820b829150620019b290601190600401620036b1565b600060405180830381600087803b158015620019cd57600080fd5b505af1158015620019e2573d6000803e3d6000fd5b5050600954601854604051636167087f60e11b81526004810191909152600093506001600160a01b03909116915063c2ce10fe9060240161010060405180830381865afa15801562001a38573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a5e919062003720565b905062001a72816060015160185462001cfa565b50565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d906200096f90859085906004016200354d565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d9062001ae5908590600160801b906004016200354d565b600060405180830381600087803b15801562001b0057600080fd5b505af115801562001b15573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038086166004830152841660248201526000805160206200648083398151915292506345b5607891506044016200096f565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358360405162001c29906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a162000d96816200124c84620012236370a0823160e01b6200120660018a62001df1565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d9062001c8a90859085906004016200354d565b600060405180830381600087803b15801562001ca557600080fd5b505af115801562001cba573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038516600482015260008051602062006480833981519152925063ca669fa791506024016200096f565b80821462001127577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001d6d9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162001da6919062003880565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162001ddf9190620038b9565b60405180910390a16200112762001f1c565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62001127828262002020565b806001600160a01b0316826001600160a01b03161462001127577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001eaa9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162001ee39190620038e4565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162001ddf919062003929565b600080516020620064808339815191523b156200200f5760405160009060008051602062006480833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49062001f8a9083906519985a5b195960d21b9060019060200162003954565b60408051601f198184030181529082905262001faa92916020016200382d565b60408051601f198184030181529082905262001fc691620037d4565b6000604051808303816000865af19150503d806000811462002005576040519150601f19603f3d011682016040523d82523d6000602084013e6200200a565b606091505b505050505b6000805461ff001916610100179055565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200209357602002820191906000526020600020905b8154815260200190600101908083116200207e575b50505050509050600083620020a88362002389565b604051602001620020bb9291906200382d565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916200210f91869188910162003975565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200214a57620021488762002436565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200218b91879189910162003975565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620021d29190620037d4565b600060405180830381855afa9150503d80600081146200220f576040519150601f19603f3d011682016040523d82523d6000602084013e62002214565b606091505b509150620022319050816200222b886020620039b1565b6200312d565b604051630667f9d760e41b815290925060009150600080516020620064808339815191529063667f9d70906200226e908b9087906004016200354d565b6020604051808303816000875af11580156200228e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022b4919062003533565b9050808214620022d85760405162461bcd60e51b815260040162000c5590620039d3565b6040516370ca10bb60e01b815260008051602062006480833981519152906370ca10bb9062002310908b9087908e9060040162003954565b600060405180830381600087803b1580156200232b57600080fd5b505af115801562002340573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200237560028b016000620031ef565b896004016000905550505050505050505050565b60606000825160206200239d9190620039b1565b67ffffffffffffffff811115620023b857620023b8620032ce565b6040519080825280601f01601f191660200182016040528015620023e3576020820181803683370190505b50905060005b835181101562000c5e5760008482815181106200240a576200240a62003a6e565b6020026020010151905080826020026020018401525080806200242d9062003a84565b915050620023e9565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b949387939192909190830182828015620024a857602002820191906000526020600020905b81548152602001906001019080831162002493575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620024f49250859187910162003975565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562002593576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200256391859187910162003975565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620025a18362002389565b604051602001620025b49291906200382d565b6040516020818303038152906040529050600080516020620064a083398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200261357600080fd5b505af115801562002628573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051620026499190620037d4565b600060405180830381855afa9150503d806000811462002686576040519150601f19603f3d011682016040523d82523d6000602084013e6200268b565b606091505b509150620026a29050816200222b876020620039b1565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062006480833981519152906365bc9481906024016000604051808303816000875af1158015620026ff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002729919081019062003b29565b5090508051600103620029f2576000600080516020620064a083398151915260001c6001600160a01b031663667f9d70898460008151811062002770576200277062003a6e565b60200260200101516040518363ffffffff1660e01b8152600401620027979291906200354d565b6020604051808303816000875af1158015620027b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027dd919062003533565b90508062002841577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106200281d576200281d62003a6e565b602002602001015160001c604051620028389291906200354d565b60405180910390a15b808314620028635760405162461bcd60e51b815260040162000c5590620039d3565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016200289b92919062003975565b6040516020818303038152906040528051906020012085600081518110620028c757620028c762003a6e565b602002602001015160001c604051620028e4949392919062003b8a565b60405180910390a18160008151811062002902576200290262003a6e565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c16835284528082209051929390926200294d918a918c910162003975565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391620029b7918a918c910162003975565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062002fb0565b60018151111562002f3f5760005b815181101562002f38576000600080516020620064a083398151915260001c6001600160a01b031663667f9d708a85858151811062002a435762002a4362003a6e565b60200260200101516040518363ffffffff1660e01b815260040162002a6a9291906200354d565b6020604051808303816000875af115801562002a8a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ab0919062003533565b90508062002b13577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062002aef5762002aef62003a6e565b602002602001015160001c60405162002b0a9291906200354d565b60405180910390a15b600080516020620064a083398151915260001c6001600160a01b03166370ca10bb8a85858151811062002b4a5762002b4a62003a6e565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040162002b789392919062003954565b600060405180830381600087803b15801562002b9357600080fd5b505af115801562002ba8573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162002bca9190620037d4565b600060405180830381855afa9150503d806000811462002c07576040519150601f19603f3d011682016040523d82523d6000602084013e62002c0c565b606091505b50909250905062002c24816200222b8b6020620039b1565b955081801562002c38575061133760f01b86145b1562002e8b577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162002c7692919062003975565b6040516020818303038152906040528051906020012088888151811062002ca15762002ca162003a6e565b602002602001015160001c60405162002cbe949392919062003b8a565b60405180910390a184848151811062002cdb5762002cdb62003a6e565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262002d26918d918f910162003975565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162002db392919062003975565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020620064a083398151915260001c6001600160a01b03166370ca10bb8c87878151811062002e255762002e2562003a6e565b6020026020010151866040518463ffffffff1660e01b815260040162002e4e9392919062003954565b600060405180830381600087803b15801562002e6957600080fd5b505af115801562002e7e573d6000803e3d6000fd5b5050505050505062002f38565b600080516020620064a083398151915260001c6001600160a01b03166370ca10bb8c87878151811062002ec25762002ec262003a6e565b6020026020010151866040518463ffffffff1660e01b815260040162002eeb9392919062003954565b600060405180830381600087803b15801562002f0657600080fd5b505af115801562002f1b573d6000803e3d6000fd5b50505050505050808062002f2f9062003a84565b91505062002a00565b5062002fb0565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162000c55565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929162002ff49188918a910162003975565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620030835760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162000c55565b6005890180546001600160a01b031916905560038901805463ffffffff19169055620030b460028a016000620031ef565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620030fa9188918a910162003975565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116200314457845162003147565b60205b905060005b81811015620031ad5762003162816008620039b1565b866200316f8388620037f2565b8151811062003182576200318262003a6e565b01602001516001600160f81b031916901c929092179180620031a48162003a84565b9150506200314c565b5090949350505050565b610c4d8062003bbb83390190565b6101da806200480883390190565b61054f80620049e283390190565b61154f8062004f3183390190565b508054600082559060005260206000209081019062001a7291905b808211156200322057600081556001016200320a565b5090565b6001600160a01b038116811462001a7257600080fd5b600080604083850312156200324e57600080fd5b82356200325b8162003224565b946020939093013593505050565b6000602082840312156200327c57600080fd5b8135620032898162003224565b9392505050565b60008060408385031215620032a457600080fd5b8235620032b18162003224565b91506020830135620032c38162003224565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715620033105762003310620032ce565b604052919050565b600067ffffffffffffffff821115620033355762003335620032ce565b50601f01601f191660200190565b60006200335a620033548462003318565b620032e4565b90508281528383830111156200336f57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126200339857600080fd5b620032898383356020850162003343565b60008060408385031215620033bd57600080fd5b823567ffffffffffffffff80821115620033d657600080fd5b620033e48683870162003386565b93506020850135915080821115620033fb57600080fd5b508301601f810185136200340e57600080fd5b6200341f8582356020840162003343565b9150509250929050565b6000602082840312156200343c57600080fd5b5035919050565b6000806000606084860312156200345957600080fd5b8335620034668162003224565b92506020840135620034788162003224565b929592945050506040919091013590565b801515811462001a7257600080fd5b60008060008060808587031215620034af57600080fd5b8435620034bc8162003224565b93506020850135620034ce8162003224565b9250604085013591506060850135620034e78162003489565b939692955090935050565b6000602082840312156200350557600080fd5b813567ffffffffffffffff8111156200351d57600080fd5b6200352b8482850162003386565b949350505050565b6000602082840312156200354657600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b60005b838110156200358357818101518382015260200162003569565b8381111562003593576000848401525b50505050565b6020815260008251806020840152620035ba81604085016020870162003566565b601f01601f19169190910160400192915050565b600060208284031215620035e157600080fd5b815167ffffffffffffffff811115620035f957600080fd5b8201601f810184136200360b57600080fd5b80516200361c620033548262003318565b8181528560208385010111156200363257600080fd5b6200364582602083016020860162003566565b95945050505050565b600083516200366281846020880162003566565b8351908301906200367881836020880162003566565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015620036ac57620036ac62003681565b500390565b815460ff81161515825260081c6001600160a01b039081166020830152600183015460408301526002830154606083015260038301546080830152600483015460a083015260058301541660c082015260069091015460e08201526101000190565b8051620019178162003224565b60006101008083850312156200373557600080fd5b6040519081019067ffffffffffffffff821181831017156200375b576200375b620032ce565b81604052835191506200376e8262003489565b8181526200377f6020850162003713565b602082015260408401516040820152606084015160608201526080840151608082015260a084015160a0820152620037ba60c0850162003713565b60c082015260e084015160e0820152809250505092915050565b60008251620037e881846020870162003566565b9190910192915050565b6000821982111562003808576200380862003681565b500190565b6000602082840312156200382057600080fd5b8151620032898162003224565b6001600160e01b03198316815281516000906200385281600485016020870162003566565b919091016004019392505050565b6000602082840312156200387357600080fd5b8151620032898162003489565b604081526000620038ab60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b604081526000620038ab60408301600a815269080808081058dd1d585b60b21b602082015260400190565b6040815260006200390f60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b6040815260006200390f60408301600a815269080808081058dd1d585b60b21b602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b825160009082906020808701845b83811015620039a15781518552938201939082019060010162003983565b5050948252509092019392505050565b6000816000190483118215151615620039ce57620039ce62003681565b500290565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b634e487b7160e01b600052603260045260246000fd5b60006001820162003a995762003a9962003681565b5060010190565b600082601f83011262003ab257600080fd5b8151602067ffffffffffffffff82111562003ad15762003ad1620032ce565b8160051b62003ae2828201620032e4565b928352848101820192828101908785111562003afd57600080fd5b83870192505b8483101562003b1e5782518252918301919083019062003b03565b979650505050505050565b6000806040838503121562003b3d57600080fd5b825167ffffffffffffffff8082111562003b5657600080fd5b62003b648683870162003aa0565b9350602085015191508082111562003b7b57600080fd5b506200341f8582860162003aa0565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610c1b806100326000396000f3fe6080604052600436106100705760003560e01c8063c2ce10fe1161004e578063c2ce10fe146100ca578063d5f3948814610164578063d77feb651461019c578063def114b61461024e57600080fd5b80636ebabba91461007557806385edae491461008a5780639b820b82146100aa575b600080fd5b610088610083366004610a73565b61026e565b005b34801561009657600080fd5b506100886100a5366004610aa3565b6106d1565b3480156100b657600080fd5b506100886100c5366004610ac0565b61076c565b3480156100d657600080fd5b506100ea6100e5366004610ad3565b6108e3565b60405161015b9190600061010082019050825115158252602083015160018060a01b03808216602085015260408501516040850152606085015160608501526080850151608085015260a085015160a08501528060c08601511660c0850152505060e083015160e083015292915050565b60405180910390f35b34801561017057600080fd5b50600054610184906001600160a01b031681565b6040516001600160a01b03909116815260200161015b565b3480156101a857600080fd5b506102046101b7366004610ad3565b6002602081905260009182526040909120805460018201549282015460038301546004840154600585015460069095015460ff8516966101009095046001600160a01b0390811696169088565b6040805198151589526001600160a01b0397881660208a01528801959095526060870193909352608086019190915260a085015290911660c083015260e08201526101000161015b565b34801561025a57600080fd5b50600154610184906001600160a01b031681565b61027e6040820160208301610aa3565b6001600160a01b0316336001600160a01b0316146102e35760405162461bcd60e51b815260206004820152601f60248201527f4f726465723a2054616b6572206d757374206265207468652073656e6465720060448201526064015b60405180910390fd5b60608181013560009081526002602081815260409283902083516101008082018652825460ff811615158352046001600160a01b03908116938201849052600183015495820195909552928101549483019490945260038401546080830152600484015460a0830152600584015490921660c082015260069092015460e08301526103b05760405162461bcd60e51b815260206004820152601a60248201527f4f726465723a20546f6b656e206973206e6f74206c697374656400000000000060448201526064016102da565b6103c06040830160208401610aa3565b6001600160a01b031681602001516001600160a01b0316036104365760405162461bcd60e51b815260206004820152602960248201527f4f726465723a204d616b657220616e642054616b65722063616e6e6f74206265604482015268207468652073616d6560b81b60648201526084016102da565b8051801561044e575061044c6020830183610afa565b155b61048f5760405162461bcd60e51b81526020600482015260126024820152714f726465723a2057726f6e6720736964657360701b60448201526064016102da565b816040013534146104ee5760405162461bcd60e51b815260206004820152602360248201527f4f726465723a204e6f7420656e6f756768203c6e61746976652063757272656e60448201526231bc9f60e91b60648201526084016102da565b60006104fa83836109b9565b9050806105495760405162461bcd60e51b815260206004820152601b60248201527f53747261746567793a20457865637574696f6e20696e76616c6964000000000060448201526064016102da565b600082602001516001600160a01b03163460405160006040518083038185875af1925050503d806000811461059a576040519150601f19603f3d011682016040523d82523d6000602084013e61059f565b606091505b50509050806105e85760405162461bcd60e51b81526020600482015260156024820152743330b4b632b21032ba3432b9103a3930b739b332b960591b60448201526064016102da565b61060d83602001518560200160208101906106039190610aa3565b8660600135610a00565b836060013583602001516001600160a01b03168560200160208101906106339190610aa3565b6001600160a01b03167fe07841b3b66aa3cf104926838e291cf5f51fab97ba83637607b3f430a9588cdd876040013560405161067191815260200190565b60405180910390a4505050606001356000908152600260208190526040822080546001600160a81b03191681556001810183905590810182905560038101829055600481018290556005810180546001600160a01b031916905560060155565b6000546001600160a01b0316331461074a5760405162461bcd60e51b815260206004820152603660248201527f4f6e6c79206465706c6f7965722063616e206368616e6765207468652070726560448201527564696374696f6e206d61726b6574206164647265737360501b60648201526084016102da565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6107796020820182610afa565b6107bb5760405162461bcd60e51b81526020600482015260136024820152726f72646572206973206e6f7420616e2061736b60681b60448201526064016102da565b6107cb6040820160208301610aa3565b6001600160a01b0316336001600160a01b03161461082b5760405162461bcd60e51b815260206004820152601860248201527f6d616b6572206d757374206265207468652073656e646572000000000000000060448201526064016102da565b60608101356000908152600260205260409020819061084a8282610b2a565b505060608101356108616040830160208401610aa3565b6001600160a01b03167fcacf921421e3d2ed25549cd19226278dd4db9301f8e390e91fc5294c9b7d4dba6040840135608085013560a08601356108aa60e0880160c08901610aa3565b604080519485526020850193909352918301526001600160a01b0316606082015260e0850135608082015260a00160405180910390a350565b61093f60405180610100016040528060001515815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600081525090565b5060009081526002602081815260409283902083516101008082018652825460ff811615158352046001600160a01b039081169382019390935260018201549481019490945291820154606084015260038201546080840152600482015460a084015260058201541660c08301526006015460e082015290565b6000826040013582604001511480156109d9575082606001358260600151145b80156109e9575042826080015111155b80156109f95750428260a0015110155b9392505050565b600154604051632142170760e11b81526001600160a01b038581166004830152848116602483015260448201849052909116906342842e0e90606401600060405180830381600087803b158015610a5657600080fd5b505af1158015610a6a573d6000803e3d6000fd5b50505050505050565b600060808284031215610a8557600080fd5b50919050565b6001600160a01b0381168114610aa057600080fd5b50565b600060208284031215610ab557600080fd5b81356109f981610a8b565b60006101008284031215610a8557600080fd5b600060208284031215610ae557600080fd5b5035919050565b8015158114610aa057600080fd5b600060208284031215610b0c57600080fd5b81356109f981610aec565b60008135610b2481610a8b565b92915050565b8135610b3581610aec565b815490151560ff1660ff1991909116178155610b7c610b5660208401610b17565b828054610100600160a81b03191660089290921b610100600160a81b0316919091179055565b60408201356001820155606082013560028201556080820135600382015560a08201356004820155610bd7610bb360c08401610b17565b6005830180546001600160a01b0319166001600160a01b0392909216919091179055565b60e08201356006820155505056fea2646970667358221220a8bfe9da06827436afee93cf52665693eeae64b0522b74ed6e38640b28d3d24464736f6c634300080d0033608060405234801561001057600080fd5b506101ba806100206000396000f3fe6080604052600436106100225760003560e01c8063150b7a021461002e57600080fd5b3661002957005b600080fd5b34801561003a57600080fd5b506100596100493660046100a8565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200160405180910390f35b80356001600160a01b038116811461008d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156100be57600080fd5b6100c785610076565b93506100d560208601610076565b925060408501359150606085013567ffffffffffffffff808211156100f957600080fd5b818701915087601f83011261010d57600080fd5b81358181111561011f5761011f610092565b604051601f8201601f19908116603f0116810190838211818310171561014757610147610092565b816040528281528a602084870101111561016057600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea2646970667358221220270294f8d08abaae54072935ac74c4f7fc4d700f4cda6e112235b9e7b7f4784064736f6c634300080d0033608060405234801561001057600080fd5b5060405161054f38038061054f83398101604081905261002f916100a4565b6000805460ff191660ff84161790556100478161004e565b50506100ff565b60018190554260025560038054906000610067836100d8565b9091555050600380546000908152600460209081526040808320949094558254825260058152838220429081905592548252600690529190912055565b600080604083850312156100b757600080fd5b825160ff811681146100c857600080fd5b6020939093015192949293505050565b6000600182016100f857634e487b7160e01b600052601160045260246000fd5b5060010190565b6104418061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638205bf6a116100715780638205bf6a146101a15780639a6fc8f5146101aa578063a87a20ce14610228578063b5ab58dc1461023b578063b633620c1461025b578063feaf968c1461027b57600080fd5b8063313ce567146100b95780634aa2011f146100dd57806350d25bcd1461013a57806354fd4d5014610151578063668a0f02146101595780637284e41614610162575b600080fd5b6000546100c69060ff1681565b60405160ff90911681526020015b60405180910390f35b6101386100eb36600461031b565b69ffffffffffffffffffff90931660038181556001849055600283905560009182526004602090815260408084209590955581548352600581528483209390935554815260069091522055565b005b61014360015481565b6040519081526020016100d4565b610143600081565b61014360035481565b604080518082018252601f81527f76302e382f74657374732f4d6f636b563341676772656761746f722e736f6c00602082015290516100d49190610354565b61014360025481565b6101f16101b83660046103a9565b69ffffffffffffffffffff8116600090815260046020908152604080832054600683528184205460059093529220549293919290918490565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a0016100d4565b6101386102363660046103cb565b6102a6565b6101436102493660046103cb565b60046020526000908152604090205481565b6101436102693660046103cb565b60056020526000908152604090205481565b60035460008181526004602090815260408083205460068352818420546005909352922054836101f1565b600181905542600255600380549060006102bf836103e4565b9091555050600380546000908152600460209081526040808320949094558254825260058152838220429081905592548252600690529190912055565b803569ffffffffffffffffffff8116811461031657600080fd5b919050565b6000806000806080858703121561033157600080fd5b61033a856102fc565b966020860135965060408601359560600135945092505050565b600060208083528351808285015260005b8181101561038157858101830151858201604001528201610365565b81811115610393576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156103bb57600080fd5b6103c4826102fc565b9392505050565b6000602082840312156103dd57600080fd5b5035919050565b60006001820161040457634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220d42ad7b23541592e002258a1e986d9ac60693da6fa772adb0ec5da63be6fdaa064736f6c634300080d003360806040523480156200001157600080fd5b5060408051808201825260048152636e616d6560e01b6020808301918252835180850190945260068452651cde5b589bdb60d21b9084015281519192916200005c916000916200007b565b508051620000729060019060208401906200007b565b5050506200015d565b828054620000899062000121565b90600052602060002090601f016020900481019282620000ad5760008555620000f8565b82601f10620000c857805160ff1916838001178555620000f8565b82800160010185558215620000f8579182015b82811115620000f8578251825591602001919060010190620000db565b50620001069291506200010a565b5090565b5b808211156200010657600081556001016200010b565b600181811c908216806200013657607f821691505b6020821081036200015757634e487b7160e01b600052602260045260246000fd5b50919050565b6113e2806200016d6000396000f3fe6080604052600436106100e75760003560e01c80636352211e1161008a578063a22cb46511610059578063a22cb46514610269578063b88d4fde14610289578063c87b56dd146102a9578063e985e9c5146102c957600080fd5b80636352211e1461020157806370a0823114610221578063755edd171461024157806395d89b411461025457600080fd5b8063081812fc116100c6578063081812fc14610167578063095ea7b31461019f57806323b872dd146101c157806342842e0e146101e157600080fd5b80629a9b7b146100ec57806301ffc9a71461011557806306fdde0314610145575b600080fd5b3480156100f857600080fd5b5061010260065481565b6040519081526020015b60405180910390f35b34801561012157600080fd5b50610135610130366004610ef8565b610312565b604051901515815260200161010c565b34801561015157600080fd5b5061015a610364565b60405161010c9190610f6d565b34801561017357600080fd5b50610187610182366004610f80565b6103f6565b6040516001600160a01b03909116815260200161010c565b3480156101ab57600080fd5b506101bf6101ba366004610fb5565b61041d565b005b3480156101cd57600080fd5b506101bf6101dc366004610fdf565b610537565b3480156101ed57600080fd5b506101bf6101fc366004610fdf565b610568565b34801561020d57600080fd5b5061018761021c366004610f80565b610583565b34801561022d57600080fd5b5061010261023c36600461101b565b6105e3565b61010261024f36600461101b565b610669565b34801561026057600080fd5b5061015a61068c565b34801561027557600080fd5b506101bf610284366004611036565b61069b565b34801561029557600080fd5b506101bf6102a4366004611088565b6106aa565b3480156102b557600080fd5b5061015a6102c4366004610f80565b6106e2565b3480156102d557600080fd5b506101356102e4366004611164565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061034357506001600160e01b03198216635b5e139f60e01b145b8061035e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461037390611197565b80601f016020809104026020016040519081016040528092919081815260200182805461039f90611197565b80156103ec5780601f106103c1576101008083540402835291602001916103ec565b820191906000526020600020905b8154815290600101906020018083116103cf57829003601f168201915b5050505050905090565b600061040182610756565b506000908152600460205260409020546001600160a01b031690565b600061042882610583565b9050806001600160a01b0316836001600160a01b03160361049a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104b657506104b681336102e4565b6105285760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610491565b61053283836107b8565b505050565b6105413382610826565b61055d5760405162461bcd60e51b8152600401610491906111d1565b6105328383836108a5565b610532838383604051806020016040528060008152506106aa565b6000818152600260205260408120546001600160a01b03168061035e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610491565b60006001600160a01b03821661064d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610491565b506001600160a01b031660009081526003602052604090205490565b60008060066000815461067b90611235565b9182905550905061035e8382610a50565b60606001805461037390611197565b6106a6338383610a6a565b5050565b6106b43383610826565b6106d05760405162461bcd60e51b8152600401610491906111d1565b6106dc84848484610b38565b50505050565b60606106ed82610756565b600061070460408051602081019091526000815290565b90506000815111610724576040518060200160405280600081525061074f565b8061072e84610b6b565b60405160200161073f92919061124e565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b03166107b55760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610491565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906107ed82610583565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061083283610583565b9050806001600160a01b0316846001600160a01b0316148061087957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061089d5750836001600160a01b0316610892846103f6565b6001600160a01b0316145b949350505050565b826001600160a01b03166108b882610583565b6001600160a01b03161461091c5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610491565b6001600160a01b03821661097e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610491565b600081815260046020908152604080832080546001600160a01b03191690556001600160a01b0386168352600390915281208054600192906109c190849061127d565b90915550506001600160a01b03821660009081526003602052604081208054600192906109ef908490611294565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6106a6828260405180602001604052806000815250610c6c565b816001600160a01b0316836001600160a01b031603610acb5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610491565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b438484846108a5565b610b4f84848484610c9f565b6106dc5760405162461bcd60e51b8152600401610491906112ac565b606081600003610b925750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610bbc5780610ba681611235565b9150610bb59050600a83611314565b9150610b96565b60008167ffffffffffffffff811115610bd757610bd7611072565b6040519080825280601f01601f191660200182016040528015610c01576020820181803683370190505b5090505b841561089d57610c1660018361127d565b9150610c23600a86611328565b610c2e906030611294565b60f81b818381518110610c4357610c4361133c565b60200101906001600160f81b031916908160001a905350610c65600a86611314565b9450610c05565b610c768383610da0565b610c836000848484610c9f565b6105325760405162461bcd60e51b8152600401610491906112ac565b60006001600160a01b0384163b15610d9557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ce3903390899088908890600401611352565b6020604051808303816000875af1925050508015610d1e575060408051601f3d908101601f19168201909252610d1b9181019061138f565b60015b610d7b573d808015610d4c576040519150601f19603f3d011682016040523d82523d6000602084013e610d51565b606091505b508051600003610d735760405162461bcd60e51b8152600401610491906112ac565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061089d565b506001949350505050565b6001600160a01b038216610df65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610491565b6000818152600260205260409020546001600160a01b031615610e5b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610491565b6001600160a01b0382166000908152600360205260408120805460019290610e84908490611294565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146107b557600080fd5b600060208284031215610f0a57600080fd5b813561074f81610ee2565b60005b83811015610f30578181015183820152602001610f18565b838111156106dc5750506000910152565b60008151808452610f59816020860160208601610f15565b601f01601f19169290920160200192915050565b60208152600061074f6020830184610f41565b600060208284031215610f9257600080fd5b5035919050565b80356001600160a01b0381168114610fb057600080fd5b919050565b60008060408385031215610fc857600080fd5b610fd183610f99565b946020939093013593505050565b600080600060608486031215610ff457600080fd5b610ffd84610f99565b925061100b60208501610f99565b9150604084013590509250925092565b60006020828403121561102d57600080fd5b61074f82610f99565b6000806040838503121561104957600080fd5b61105283610f99565b91506020830135801515811461106757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561109e57600080fd5b6110a785610f99565b93506110b560208601610f99565b925060408501359150606085013567ffffffffffffffff808211156110d957600080fd5b818701915087601f8301126110ed57600080fd5b8135818111156110ff576110ff611072565b604051601f8201601f19908116603f0116810190838211818310171561112757611127611072565b816040528281528a602084870101111561114057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561117757600080fd5b61118083610f99565b915061118e60208401610f99565b90509250929050565b600181811c908216806111ab57607f821691505b6020821081036111cb57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000600182016112475761124761121f565b5060010190565b60008351611260818460208801610f15565b835190830190611274818360208801610f15565b01949350505050565b60008282101561128f5761128f61121f565b500390565b600082198211156112a7576112a761121f565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b600082611323576113236112fe565b500490565b600082611337576113376112fe565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061138590830184610f41565b9695505050505050565b6000602082840312156113a157600080fd5b815161074f81610ee256fea2646970667358221220fdfe1effe33de2a1d770cf3255cc2e76e3f498f98f5b59b03224bfd618be6cdc64736f6c634300080d00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220899a6ab6a17bd2199f1d2c345dfa5737d63be0147123501f2d92bfbb41af841a64736f6c634300080d0033",
    "sourceMap": "1162:2627:25:-:0;;;1572:26:1;;;-1:-1:-1;;171:28:2;;;;;1162:2627:25;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001755760003560e01c80639a8325a011620000d3578063c88a5e6d1162000086578063c88a5e6d1462000307578063d06d8229146200031e578063d82555f11462000335578063e9a79a7b146200034c578063f8ccbf471462000363578063fa7626d4146200037757600080fd5b80639a8325a01462000293578063af9bbe5f14620002aa578063b82e287d14620002c1578063b9c071b414620002cb578063ba414fa614620002e2578063c2ddc81f14620002fd57600080fd5b80633a768463116200012c5780633a76846314620002165780633bf82db1146200022d5780636bce989b14620002445780636f597075146200025b5780637201130d146200027257806397754ae9146200027c57600080fd5b80630a9254e4146200017a578063108554f21462000186578063233240ee146200019d57806329a9e30014620001b457806329ce9dde14620001cb5780632d6c17a314620001ff575b600080fd5b6200018462000385565b005b62000184620001973660046200323a565b620008ce565b62000184620001ae36600462003269565b620009a7565b62000184620001c536600462003290565b62000a83565b620001e2620001dc366004620033a9565b62000b35565b6040516001600160a01b0390911681526020015b60405180910390f35b620001846200021036600462003429565b62000c65565b620001e26000805160206200648083398151915281565b620001846200023e36600462003443565b62000ca5565b620001846200025536600462003443565b62000d87565b620001846200026c36600462003269565b62000d9b565b6200018462000e45565b620001846200028d36600462003498565b6200112b565b620001e2620002a4366004620034f2565b6200136c565b62000184620002bb36600462003443565b6200146e565b620001846200151c565b62000184620002dc36600462003429565b620017ca565b620002ec620017eb565b6040519015158152602001620001f6565b620001846200191c565b62000184620003183660046200323a565b62001a75565b620001846200032f36600462003290565b62001aab565b620001846200034636600462003443565b62001b5d565b620001846200035d3660046200323a565b62001c54565b600054620002ec9062010000900460ff1681565b600054620002ec9060ff1681565b6040516200039390620031b7565b604051809103906000f080158015620003b0573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392909216919091179055604051620003df90620031c5565b604051809103906000f080158015620003fc573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b03929092169190911790556040516200042b90620031c5565b604051809103906000f08015801562000448573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b03928316179055600a54604051911690600090683635c9adc5dea000009082818181858883f193505050501580156200049b573d6000803e3d6000fd5b50600b546040516001600160a01b0390911690600090683635c9adc5dea000009082818181858883f19350505050158015620004db573d6000803e3d6000fd5b50600c80546001600160a01b031916600080516020620064808339815191521790556040516008906501d1a94a2000906200051690620031d3565b60ff90921682526020820152604001604051809103906000f08015801562000542573d6000803e3d6000fd5b50600d60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600864174876e8006040516200057f90620031d3565b60ff90921682526020820152604001604051809103906000f080158015620005ab573d6000803e3d6000fd5b50600e60006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060086404a817c800604051620005e890620031d3565b60ff90921682526020820152604001604051809103906000f08015801562000614573d6000803e3d6000fd5b50600f80546001600160a01b0319166001600160a01b03929092169190911790556040516200064390620031e1565b604051809103906000f08015801562000660573d6000803e3d6000fd5b50601080546001600160a01b0319166001600160a01b03928316908117909155600a5460405163755edd1760e01b8152921660048301529063755edd17906024016020604051808303816000875af1158015620006c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006e7919062003533565b601855600c54600a5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b1580156200073457600080fd5b505af115801562000749573d6000803e3d6000fd5b505060105460095460405163a22cb46560e01b81526001600160a01b039182166004820152600160248201529116925063a22cb4659150604401600060405180830381600087803b1580156200079e57600080fd5b505af1158015620007b3573d6000803e3d6000fd5b50506009546010546040516385edae4960e01b81526001600160a01b039182166004820152911692506385edae499150602401600060405180830381600087803b1580156200080157600080fd5b505af115801562000816573d6000803e3d6000fd5b50506040805161010080820183526001808352600a546001600160a01b0390811660208501819052670de0b6b3a7640000958501869052601854606086018190526000608087018190526103e860a08801819052600e5490941660c08801819052641bf08eb00060e0909801889052601180546001600160a81b0319169490970293909317909417909455601295909555601392909255601455601555601680546001600160a01b0319169092179091556017555050565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d906200090490859085906004016200354d565b600060405180830381600087803b1580156200091f57600080fd5b505af115801562000934573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03851660048201526000805160206200648083398151915292506306447d5691506024015b600060405180830381600087803b1580156200098a57600080fd5b505af11580156200099f573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d90620009e1908490600160801b906004016200354d565b600060405180830381600087803b158015620009fc57600080fd5b505af115801562000a11573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038416600482015260008051602062006480833981519152925063ca669fa791506024015b600060405180830381600087803b15801562000a6757600080fd5b505af115801562000a7c573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d9062000abd908590600160801b906004016200354d565b600060405180830381600087803b15801562000ad857600080fd5b505af115801562000aed573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038086166004830152841660248201526000805160206200648083398151915292506347e50cce91506044016200096f565b604051638d1cc92560e01b815260009081906000805160206200648083398151915290638d1cc9259062000b6e90879060040162003599565b6000604051808303816000875af115801562000b8e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000bb89190810190620035ce565b8360405160200162000bcc9291906200364e565b60405160208183030381529060405290508051602082016000f091506001600160a01b03821662000c5e5760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b6000805160206200648083398151915263e5d6bf0262000c86834262003697565b6040518263ffffffff1660e01b815260040162000a4c91815260200190565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d9062000cdb90869085906004016200354d565b600060405180830381600087803b15801562000cf657600080fd5b505af115801562000d0b573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038087166004830152851660248201526000805160206200648083398151915292506345b5607891506044015b600060405180830381600087803b15801562000d6957600080fd5b505af115801562000d7e573d6000803e3d6000fd5b50505050505050565b62000d9683838360006200112b565b505050565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d9062000dd5908490600160801b906004016200354d565b600060405180830381600087803b15801562000df057600080fd5b505af115801562000e05573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03841660048201526000805160206200648083398151915292506306447d56915060240162000a4c565b600c54600a546040516303223eab60e11b81526001600160a01b0391821660048201529116906306447d5690602401600060405180830381600087803b15801562000e8f57600080fd5b505af115801562000ea4573d6000803e3d6000fd5b5050600954604051634dc105c160e11b81526001600160a01b039091169250639b820b82915062000edb90601190600401620036b1565b600060405180830381600087803b15801562000ef657600080fd5b505af115801562000f0b573d6000803e3d6000fd5b5050600954601854604051636167087f60e11b81526004810191909152600093506001600160a01b03909116915063c2ce10fe9060240161010060405180830381865afa15801562000f61573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f87919062003720565b905062000fa18160400151670de0b6b3a764000062001cfa565b600954604080516101008101825260018152600a546001600160a01b0390811660208301908152674563918244f40000838501908152601854606085019081526000608086019081526103e860a08701908152600e54861660c08801908152641bf08eb00060e089019081529851634dc105c160e11b815297511515600489015294518616602488015292516044870152905160648601525160848501525160a484015251811660c4830152915160e4820152911690639b820b829061010401600060405180830381600087803b1580156200107c57600080fd5b505af115801562001091573d6000803e3d6000fd5b5050600954601854604051636167087f60e11b81526004810191909152600093506001600160a01b03909116915063c2ce10fe9060240161010060405180830381865afa158015620010e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200110d919062003720565b9050620011278160400151674563918244f4000062001cfa565b5050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916200118191620037d4565b6000604051808303816000865af19150503d8060008114620011c0576040519150601f19603f3d011682016040523d82523d6000602084013e620011c5565b606091505b50915050600081806020019051810190620011e1919062003533565b905062001253846200124c87620012236370a0823160e01b6200120660018d62001df1565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062001e16565b82156200099f5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916200129e9190620037d4565b6000604051808303816000865af19150503d8060008114620012dd576040519150601f19603f3d011682016040523d82523d6000602084013e620012e2565b606091505b50915050600081806020019051810190620012fe919062003533565b905082861015620013295762001315868462003697565b62001321908262003697565b905062001344565b62001335838762003697565b620013419082620037f2565b90505b62001362816200124c6318160ddd60e01b6200120660018d62001df1565b5050505050505050565b604051638d1cc92560e01b815260009081906000805160206200648083398151915290638d1cc92590620013a590869060040162003599565b6000604051808303816000875af1158015620013c5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620013ef9190810190620035ce565b90508051602082016000f091506001600160a01b038216620014685760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b606482015260840162000c55565b50919050565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d90620014a490869085906004016200354d565b600060405180830381600087803b158015620014bf57600080fd5b505af1158015620014d4573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038087166004830152851660248201526000805160206200648083398151915292506347e50cce915060440162000d4e565b600c54600a5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b1580156200156657600080fd5b505af11580156200157b573d6000803e3d6000fd5b5050600954604051634dc105c160e11b81526001600160a01b039091169250639b820b829150620015b290601190600401620036b1565b600060405180830381600087803b158015620015cd57600080fd5b505af1158015620015e2573d6000803e3d6000fd5b50506040805160808101825260008152600b546001600160a01b0390811660208301819052670de0b6b3a7640000838501526018546060840152600a54600c54945163ca669fa760e01b81526004810192909252929550918116319350919091169063ca669fa790602401600060405180830381600087803b1580156200166857600080fd5b505af11580156200167d573d6000803e3d6000fd5b505060095460408051636ebabba960e01b815286511515600482015260208701516001600160a01b0390811660248301529187015160448201526060870151606482015291169250636ebabba99150670de0b6b3a7640000906084016000604051808303818588803b158015620016f357600080fd5b505af115801562001708573d6000803e3d6000fd5b50506010546018546040516331a9108f60e11b81526200179e95506001600160a01b039092169350636352211e9250620017489160040190815260200190565b602060405180830381865afa15801562001766573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200178c91906200380d565b600b546001600160a01b031662001e22565b600a5462001127906001600160a01b031631620017c483670de0b6b3a7640000620037f2565b62001cfa565b6000805160206200648083398151915263e5d6bf0262000c868342620037f2565b60008054610100900460ff16156200180c5750600054610100900460ff1690565b6000600080516020620064808339815191523b15620019175760405160009060008051602062006480833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620018799083906519985a5b195960d21b906020016200354d565b60408051601f19818403018152908290526200189992916020016200382d565b60408051601f1981840301815290829052620018b591620037d4565b6000604051808303816000865af19150503d8060008114620018f4576040519150601f19603f3d011682016040523d82523d6000602084013e620018f9565b606091505b509150508080602001905181019062001913919062003860565b9150505b919050565b600c54600a5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b1580156200196657600080fd5b505af11580156200197b573d6000803e3d6000fd5b5050600954604051634dc105c160e11b81526001600160a01b039091169250639b820b829150620019b290601190600401620036b1565b600060405180830381600087803b158015620019cd57600080fd5b505af1158015620019e2573d6000803e3d6000fd5b5050600954601854604051636167087f60e11b81526004810191909152600093506001600160a01b03909116915063c2ce10fe9060240161010060405180830381865afa15801562001a38573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a5e919062003720565b905062001a72816060015160185462001cfa565b50565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d906200096f90859085906004016200354d565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d9062001ae5908590600160801b906004016200354d565b600060405180830381600087803b15801562001b0057600080fd5b505af115801562001b15573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038086166004830152841660248201526000805160206200648083398151915292506345b5607891506044016200096f565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358360405162001c29906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a162000d96816200124c84620012236370a0823160e01b6200120660018a62001df1565b60405163c88a5e6d60e01b8152600080516020620064808339815191529063c88a5e6d9062001c8a90859085906004016200354d565b600060405180830381600087803b15801562001ca557600080fd5b505af115801562001cba573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038516600482015260008051602062006480833981519152925063ca669fa791506024016200096f565b80821462001127577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001d6d9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162001da6919062003880565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162001ddf9190620038b9565b60405180910390a16200112762001f1c565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62001127828262002020565b806001600160a01b0316826001600160a01b03161462001127577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001eaa9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162001ee39190620038e4565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162001ddf919062003929565b600080516020620064808339815191523b156200200f5760405160009060008051602062006480833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49062001f8a9083906519985a5b195960d21b9060019060200162003954565b60408051601f198184030181529082905262001faa92916020016200382d565b60408051601f198184030181529082905262001fc691620037d4565b6000604051808303816000865af19150503d806000811462002005576040519150601f19603f3d011682016040523d82523d6000602084013e6200200a565b606091505b505050505b6000805461ff001916610100179055565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200209357602002820191906000526020600020905b8154815260200190600101908083116200207e575b50505050509050600083620020a88362002389565b604051602001620020bb9291906200382d565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916200210f91869188910162003975565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200214a57620021488762002436565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200218b91879189910162003975565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620021d29190620037d4565b600060405180830381855afa9150503d80600081146200220f576040519150601f19603f3d011682016040523d82523d6000602084013e62002214565b606091505b509150620022319050816200222b886020620039b1565b6200312d565b604051630667f9d760e41b815290925060009150600080516020620064808339815191529063667f9d70906200226e908b9087906004016200354d565b6020604051808303816000875af11580156200228e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022b4919062003533565b9050808214620022d85760405162461bcd60e51b815260040162000c5590620039d3565b6040516370ca10bb60e01b815260008051602062006480833981519152906370ca10bb9062002310908b9087908e9060040162003954565b600060405180830381600087803b1580156200232b57600080fd5b505af115801562002340573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200237560028b016000620031ef565b896004016000905550505050505050505050565b60606000825160206200239d9190620039b1565b67ffffffffffffffff811115620023b857620023b8620032ce565b6040519080825280601f01601f191660200182016040528015620023e3576020820181803683370190505b50905060005b835181101562000c5e5760008482815181106200240a576200240a62003a6e565b6020026020010151905080826020026020018401525080806200242d9062003a84565b915050620023e9565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b949387939192909190830182828015620024a857602002820191906000526020600020905b81548152602001906001019080831162002493575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620024f49250859187910162003975565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562002593576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200256391859187910162003975565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620025a18362002389565b604051602001620025b49291906200382d565b6040516020818303038152906040529050600080516020620064a083398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200261357600080fd5b505af115801562002628573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051620026499190620037d4565b600060405180830381855afa9150503d806000811462002686576040519150601f19603f3d011682016040523d82523d6000602084013e6200268b565b606091505b509150620026a29050816200222b876020620039b1565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062006480833981519152906365bc9481906024016000604051808303816000875af1158015620026ff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002729919081019062003b29565b5090508051600103620029f2576000600080516020620064a083398151915260001c6001600160a01b031663667f9d70898460008151811062002770576200277062003a6e565b60200260200101516040518363ffffffff1660e01b8152600401620027979291906200354d565b6020604051808303816000875af1158015620027b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027dd919062003533565b90508062002841577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106200281d576200281d62003a6e565b602002602001015160001c604051620028389291906200354d565b60405180910390a15b808314620028635760405162461bcd60e51b815260040162000c5590620039d3565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016200289b92919062003975565b6040516020818303038152906040528051906020012085600081518110620028c757620028c762003a6e565b602002602001015160001c604051620028e4949392919062003b8a565b60405180910390a18160008151811062002902576200290262003a6e565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c16835284528082209051929390926200294d918a918c910162003975565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391620029b7918a918c910162003975565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062002fb0565b60018151111562002f3f5760005b815181101562002f38576000600080516020620064a083398151915260001c6001600160a01b031663667f9d708a85858151811062002a435762002a4362003a6e565b60200260200101516040518363ffffffff1660e01b815260040162002a6a9291906200354d565b6020604051808303816000875af115801562002a8a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ab0919062003533565b90508062002b13577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062002aef5762002aef62003a6e565b602002602001015160001c60405162002b0a9291906200354d565b60405180910390a15b600080516020620064a083398151915260001c6001600160a01b03166370ca10bb8a85858151811062002b4a5762002b4a62003a6e565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040162002b789392919062003954565b600060405180830381600087803b15801562002b9357600080fd5b505af115801562002ba8573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162002bca9190620037d4565b600060405180830381855afa9150503d806000811462002c07576040519150601f19603f3d011682016040523d82523d6000602084013e62002c0c565b606091505b50909250905062002c24816200222b8b6020620039b1565b955081801562002c38575061133760f01b86145b1562002e8b577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162002c7692919062003975565b6040516020818303038152906040528051906020012088888151811062002ca15762002ca162003a6e565b602002602001015160001c60405162002cbe949392919062003b8a565b60405180910390a184848151811062002cdb5762002cdb62003a6e565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262002d26918d918f910162003975565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162002db392919062003975565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020620064a083398151915260001c6001600160a01b03166370ca10bb8c87878151811062002e255762002e2562003a6e565b6020026020010151866040518463ffffffff1660e01b815260040162002e4e9392919062003954565b600060405180830381600087803b15801562002e6957600080fd5b505af115801562002e7e573d6000803e3d6000fd5b5050505050505062002f38565b600080516020620064a083398151915260001c6001600160a01b03166370ca10bb8c87878151811062002ec25762002ec262003a6e565b6020026020010151866040518463ffffffff1660e01b815260040162002eeb9392919062003954565b600060405180830381600087803b15801562002f0657600080fd5b505af115801562002f1b573d6000803e3d6000fd5b50505050505050808062002f2f9062003a84565b91505062002a00565b5062002fb0565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162000c55565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929162002ff49188918a910162003975565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620030835760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162000c55565b6005890180546001600160a01b031916905560038901805463ffffffff19169055620030b460028a016000620031ef565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620030fa9188918a910162003975565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116200314457845162003147565b60205b905060005b81811015620031ad5762003162816008620039b1565b866200316f8388620037f2565b8151811062003182576200318262003a6e565b01602001516001600160f81b031916901c929092179180620031a48162003a84565b9150506200314c565b5090949350505050565b610c4d8062003bbb83390190565b6101da806200480883390190565b61054f80620049e283390190565b61154f8062004f3183390190565b508054600082559060005260206000209081019062001a7291905b808211156200322057600081556001016200320a565b5090565b6001600160a01b038116811462001a7257600080fd5b600080604083850312156200324e57600080fd5b82356200325b8162003224565b946020939093013593505050565b6000602082840312156200327c57600080fd5b8135620032898162003224565b9392505050565b60008060408385031215620032a457600080fd5b8235620032b18162003224565b91506020830135620032c38162003224565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715620033105762003310620032ce565b604052919050565b600067ffffffffffffffff821115620033355762003335620032ce565b50601f01601f191660200190565b60006200335a620033548462003318565b620032e4565b90508281528383830111156200336f57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126200339857600080fd5b620032898383356020850162003343565b60008060408385031215620033bd57600080fd5b823567ffffffffffffffff80821115620033d657600080fd5b620033e48683870162003386565b93506020850135915080821115620033fb57600080fd5b508301601f810185136200340e57600080fd5b6200341f8582356020840162003343565b9150509250929050565b6000602082840312156200343c57600080fd5b5035919050565b6000806000606084860312156200345957600080fd5b8335620034668162003224565b92506020840135620034788162003224565b929592945050506040919091013590565b801515811462001a7257600080fd5b60008060008060808587031215620034af57600080fd5b8435620034bc8162003224565b93506020850135620034ce8162003224565b9250604085013591506060850135620034e78162003489565b939692955090935050565b6000602082840312156200350557600080fd5b813567ffffffffffffffff8111156200351d57600080fd5b6200352b8482850162003386565b949350505050565b6000602082840312156200354657600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b60005b838110156200358357818101518382015260200162003569565b8381111562003593576000848401525b50505050565b6020815260008251806020840152620035ba81604085016020870162003566565b601f01601f19169190910160400192915050565b600060208284031215620035e157600080fd5b815167ffffffffffffffff811115620035f957600080fd5b8201601f810184136200360b57600080fd5b80516200361c620033548262003318565b8181528560208385010111156200363257600080fd5b6200364582602083016020860162003566565b95945050505050565b600083516200366281846020880162003566565b8351908301906200367881836020880162003566565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015620036ac57620036ac62003681565b500390565b815460ff81161515825260081c6001600160a01b039081166020830152600183015460408301526002830154606083015260038301546080830152600483015460a083015260058301541660c082015260069091015460e08201526101000190565b8051620019178162003224565b60006101008083850312156200373557600080fd5b6040519081019067ffffffffffffffff821181831017156200375b576200375b620032ce565b81604052835191506200376e8262003489565b8181526200377f6020850162003713565b602082015260408401516040820152606084015160608201526080840151608082015260a084015160a0820152620037ba60c0850162003713565b60c082015260e084015160e0820152809250505092915050565b60008251620037e881846020870162003566565b9190910192915050565b6000821982111562003808576200380862003681565b500190565b6000602082840312156200382057600080fd5b8151620032898162003224565b6001600160e01b03198316815281516000906200385281600485016020870162003566565b919091016004019392505050565b6000602082840312156200387357600080fd5b8151620032898162003489565b604081526000620038ab60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b604081526000620038ab60408301600a815269080808081058dd1d585b60b21b602082015260400190565b6040815260006200390f60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b6040815260006200390f60408301600a815269080808081058dd1d585b60b21b602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b825160009082906020808701845b83811015620039a15781518552938201939082019060010162003983565b5050948252509092019392505050565b6000816000190483118215151615620039ce57620039ce62003681565b500290565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b634e487b7160e01b600052603260045260246000fd5b60006001820162003a995762003a9962003681565b5060010190565b600082601f83011262003ab257600080fd5b8151602067ffffffffffffffff82111562003ad15762003ad1620032ce565b8160051b62003ae2828201620032e4565b928352848101820192828101908785111562003afd57600080fd5b83870192505b8483101562003b1e5782518252918301919083019062003b03565b979650505050505050565b6000806040838503121562003b3d57600080fd5b825167ffffffffffffffff8082111562003b5657600080fd5b62003b648683870162003aa0565b9350602085015191508082111562003b7b57600080fd5b506200341f8582860162003aa0565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610c1b806100326000396000f3fe6080604052600436106100705760003560e01c8063c2ce10fe1161004e578063c2ce10fe146100ca578063d5f3948814610164578063d77feb651461019c578063def114b61461024e57600080fd5b80636ebabba91461007557806385edae491461008a5780639b820b82146100aa575b600080fd5b610088610083366004610a73565b61026e565b005b34801561009657600080fd5b506100886100a5366004610aa3565b6106d1565b3480156100b657600080fd5b506100886100c5366004610ac0565b61076c565b3480156100d657600080fd5b506100ea6100e5366004610ad3565b6108e3565b60405161015b9190600061010082019050825115158252602083015160018060a01b03808216602085015260408501516040850152606085015160608501526080850151608085015260a085015160a08501528060c08601511660c0850152505060e083015160e083015292915050565b60405180910390f35b34801561017057600080fd5b50600054610184906001600160a01b031681565b6040516001600160a01b03909116815260200161015b565b3480156101a857600080fd5b506102046101b7366004610ad3565b6002602081905260009182526040909120805460018201549282015460038301546004840154600585015460069095015460ff8516966101009095046001600160a01b0390811696169088565b6040805198151589526001600160a01b0397881660208a01528801959095526060870193909352608086019190915260a085015290911660c083015260e08201526101000161015b565b34801561025a57600080fd5b50600154610184906001600160a01b031681565b61027e6040820160208301610aa3565b6001600160a01b0316336001600160a01b0316146102e35760405162461bcd60e51b815260206004820152601f60248201527f4f726465723a2054616b6572206d757374206265207468652073656e6465720060448201526064015b60405180910390fd5b60608181013560009081526002602081815260409283902083516101008082018652825460ff811615158352046001600160a01b03908116938201849052600183015495820195909552928101549483019490945260038401546080830152600484015460a0830152600584015490921660c082015260069092015460e08301526103b05760405162461bcd60e51b815260206004820152601a60248201527f4f726465723a20546f6b656e206973206e6f74206c697374656400000000000060448201526064016102da565b6103c06040830160208401610aa3565b6001600160a01b031681602001516001600160a01b0316036104365760405162461bcd60e51b815260206004820152602960248201527f4f726465723a204d616b657220616e642054616b65722063616e6e6f74206265604482015268207468652073616d6560b81b60648201526084016102da565b8051801561044e575061044c6020830183610afa565b155b61048f5760405162461bcd60e51b81526020600482015260126024820152714f726465723a2057726f6e6720736964657360701b60448201526064016102da565b816040013534146104ee5760405162461bcd60e51b815260206004820152602360248201527f4f726465723a204e6f7420656e6f756768203c6e61746976652063757272656e60448201526231bc9f60e91b60648201526084016102da565b60006104fa83836109b9565b9050806105495760405162461bcd60e51b815260206004820152601b60248201527f53747261746567793a20457865637574696f6e20696e76616c6964000000000060448201526064016102da565b600082602001516001600160a01b03163460405160006040518083038185875af1925050503d806000811461059a576040519150601f19603f3d011682016040523d82523d6000602084013e61059f565b606091505b50509050806105e85760405162461bcd60e51b81526020600482015260156024820152743330b4b632b21032ba3432b9103a3930b739b332b960591b60448201526064016102da565b61060d83602001518560200160208101906106039190610aa3565b8660600135610a00565b836060013583602001516001600160a01b03168560200160208101906106339190610aa3565b6001600160a01b03167fe07841b3b66aa3cf104926838e291cf5f51fab97ba83637607b3f430a9588cdd876040013560405161067191815260200190565b60405180910390a4505050606001356000908152600260208190526040822080546001600160a81b03191681556001810183905590810182905560038101829055600481018290556005810180546001600160a01b031916905560060155565b6000546001600160a01b0316331461074a5760405162461bcd60e51b815260206004820152603660248201527f4f6e6c79206465706c6f7965722063616e206368616e6765207468652070726560448201527564696374696f6e206d61726b6574206164647265737360501b60648201526084016102da565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6107796020820182610afa565b6107bb5760405162461bcd60e51b81526020600482015260136024820152726f72646572206973206e6f7420616e2061736b60681b60448201526064016102da565b6107cb6040820160208301610aa3565b6001600160a01b0316336001600160a01b03161461082b5760405162461bcd60e51b815260206004820152601860248201527f6d616b6572206d757374206265207468652073656e646572000000000000000060448201526064016102da565b60608101356000908152600260205260409020819061084a8282610b2a565b505060608101356108616040830160208401610aa3565b6001600160a01b03167fcacf921421e3d2ed25549cd19226278dd4db9301f8e390e91fc5294c9b7d4dba6040840135608085013560a08601356108aa60e0880160c08901610aa3565b604080519485526020850193909352918301526001600160a01b0316606082015260e0850135608082015260a00160405180910390a350565b61093f60405180610100016040528060001515815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600081525090565b5060009081526002602081815260409283902083516101008082018652825460ff811615158352046001600160a01b039081169382019390935260018201549481019490945291820154606084015260038201546080840152600482015460a084015260058201541660c08301526006015460e082015290565b6000826040013582604001511480156109d9575082606001358260600151145b80156109e9575042826080015111155b80156109f95750428260a0015110155b9392505050565b600154604051632142170760e11b81526001600160a01b038581166004830152848116602483015260448201849052909116906342842e0e90606401600060405180830381600087803b158015610a5657600080fd5b505af1158015610a6a573d6000803e3d6000fd5b50505050505050565b600060808284031215610a8557600080fd5b50919050565b6001600160a01b0381168114610aa057600080fd5b50565b600060208284031215610ab557600080fd5b81356109f981610a8b565b60006101008284031215610a8557600080fd5b600060208284031215610ae557600080fd5b5035919050565b8015158114610aa057600080fd5b600060208284031215610b0c57600080fd5b81356109f981610aec565b60008135610b2481610a8b565b92915050565b8135610b3581610aec565b815490151560ff1660ff1991909116178155610b7c610b5660208401610b17565b828054610100600160a81b03191660089290921b610100600160a81b0316919091179055565b60408201356001820155606082013560028201556080820135600382015560a08201356004820155610bd7610bb360c08401610b17565b6005830180546001600160a01b0319166001600160a01b0392909216919091179055565b60e08201356006820155505056fea2646970667358221220a8bfe9da06827436afee93cf52665693eeae64b0522b74ed6e38640b28d3d24464736f6c634300080d0033608060405234801561001057600080fd5b506101ba806100206000396000f3fe6080604052600436106100225760003560e01c8063150b7a021461002e57600080fd5b3661002957005b600080fd5b34801561003a57600080fd5b506100596100493660046100a8565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200160405180910390f35b80356001600160a01b038116811461008d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156100be57600080fd5b6100c785610076565b93506100d560208601610076565b925060408501359150606085013567ffffffffffffffff808211156100f957600080fd5b818701915087601f83011261010d57600080fd5b81358181111561011f5761011f610092565b604051601f8201601f19908116603f0116810190838211818310171561014757610147610092565b816040528281528a602084870101111561016057600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea2646970667358221220270294f8d08abaae54072935ac74c4f7fc4d700f4cda6e112235b9e7b7f4784064736f6c634300080d0033608060405234801561001057600080fd5b5060405161054f38038061054f83398101604081905261002f916100a4565b6000805460ff191660ff84161790556100478161004e565b50506100ff565b60018190554260025560038054906000610067836100d8565b9091555050600380546000908152600460209081526040808320949094558254825260058152838220429081905592548252600690529190912055565b600080604083850312156100b757600080fd5b825160ff811681146100c857600080fd5b6020939093015192949293505050565b6000600182016100f857634e487b7160e01b600052601160045260246000fd5b5060010190565b6104418061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638205bf6a116100715780638205bf6a146101a15780639a6fc8f5146101aa578063a87a20ce14610228578063b5ab58dc1461023b578063b633620c1461025b578063feaf968c1461027b57600080fd5b8063313ce567146100b95780634aa2011f146100dd57806350d25bcd1461013a57806354fd4d5014610151578063668a0f02146101595780637284e41614610162575b600080fd5b6000546100c69060ff1681565b60405160ff90911681526020015b60405180910390f35b6101386100eb36600461031b565b69ffffffffffffffffffff90931660038181556001849055600283905560009182526004602090815260408084209590955581548352600581528483209390935554815260069091522055565b005b61014360015481565b6040519081526020016100d4565b610143600081565b61014360035481565b604080518082018252601f81527f76302e382f74657374732f4d6f636b563341676772656761746f722e736f6c00602082015290516100d49190610354565b61014360025481565b6101f16101b83660046103a9565b69ffffffffffffffffffff8116600090815260046020908152604080832054600683528184205460059093529220549293919290918490565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a0016100d4565b6101386102363660046103cb565b6102a6565b6101436102493660046103cb565b60046020526000908152604090205481565b6101436102693660046103cb565b60056020526000908152604090205481565b60035460008181526004602090815260408083205460068352818420546005909352922054836101f1565b600181905542600255600380549060006102bf836103e4565b9091555050600380546000908152600460209081526040808320949094558254825260058152838220429081905592548252600690529190912055565b803569ffffffffffffffffffff8116811461031657600080fd5b919050565b6000806000806080858703121561033157600080fd5b61033a856102fc565b966020860135965060408601359560600135945092505050565b600060208083528351808285015260005b8181101561038157858101830151858201604001528201610365565b81811115610393576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156103bb57600080fd5b6103c4826102fc565b9392505050565b6000602082840312156103dd57600080fd5b5035919050565b60006001820161040457634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220d42ad7b23541592e002258a1e986d9ac60693da6fa772adb0ec5da63be6fdaa064736f6c634300080d003360806040523480156200001157600080fd5b5060408051808201825260048152636e616d6560e01b6020808301918252835180850190945260068452651cde5b589bdb60d21b9084015281519192916200005c916000916200007b565b508051620000729060019060208401906200007b565b5050506200015d565b828054620000899062000121565b90600052602060002090601f016020900481019282620000ad5760008555620000f8565b82601f10620000c857805160ff1916838001178555620000f8565b82800160010185558215620000f8579182015b82811115620000f8578251825591602001919060010190620000db565b50620001069291506200010a565b5090565b5b808211156200010657600081556001016200010b565b600181811c908216806200013657607f821691505b6020821081036200015757634e487b7160e01b600052602260045260246000fd5b50919050565b6113e2806200016d6000396000f3fe6080604052600436106100e75760003560e01c80636352211e1161008a578063a22cb46511610059578063a22cb46514610269578063b88d4fde14610289578063c87b56dd146102a9578063e985e9c5146102c957600080fd5b80636352211e1461020157806370a0823114610221578063755edd171461024157806395d89b411461025457600080fd5b8063081812fc116100c6578063081812fc14610167578063095ea7b31461019f57806323b872dd146101c157806342842e0e146101e157600080fd5b80629a9b7b146100ec57806301ffc9a71461011557806306fdde0314610145575b600080fd5b3480156100f857600080fd5b5061010260065481565b6040519081526020015b60405180910390f35b34801561012157600080fd5b50610135610130366004610ef8565b610312565b604051901515815260200161010c565b34801561015157600080fd5b5061015a610364565b60405161010c9190610f6d565b34801561017357600080fd5b50610187610182366004610f80565b6103f6565b6040516001600160a01b03909116815260200161010c565b3480156101ab57600080fd5b506101bf6101ba366004610fb5565b61041d565b005b3480156101cd57600080fd5b506101bf6101dc366004610fdf565b610537565b3480156101ed57600080fd5b506101bf6101fc366004610fdf565b610568565b34801561020d57600080fd5b5061018761021c366004610f80565b610583565b34801561022d57600080fd5b5061010261023c36600461101b565b6105e3565b61010261024f36600461101b565b610669565b34801561026057600080fd5b5061015a61068c565b34801561027557600080fd5b506101bf610284366004611036565b61069b565b34801561029557600080fd5b506101bf6102a4366004611088565b6106aa565b3480156102b557600080fd5b5061015a6102c4366004610f80565b6106e2565b3480156102d557600080fd5b506101356102e4366004611164565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061034357506001600160e01b03198216635b5e139f60e01b145b8061035e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461037390611197565b80601f016020809104026020016040519081016040528092919081815260200182805461039f90611197565b80156103ec5780601f106103c1576101008083540402835291602001916103ec565b820191906000526020600020905b8154815290600101906020018083116103cf57829003601f168201915b5050505050905090565b600061040182610756565b506000908152600460205260409020546001600160a01b031690565b600061042882610583565b9050806001600160a01b0316836001600160a01b03160361049a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104b657506104b681336102e4565b6105285760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610491565b61053283836107b8565b505050565b6105413382610826565b61055d5760405162461bcd60e51b8152600401610491906111d1565b6105328383836108a5565b610532838383604051806020016040528060008152506106aa565b6000818152600260205260408120546001600160a01b03168061035e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610491565b60006001600160a01b03821661064d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610491565b506001600160a01b031660009081526003602052604090205490565b60008060066000815461067b90611235565b9182905550905061035e8382610a50565b60606001805461037390611197565b6106a6338383610a6a565b5050565b6106b43383610826565b6106d05760405162461bcd60e51b8152600401610491906111d1565b6106dc84848484610b38565b50505050565b60606106ed82610756565b600061070460408051602081019091526000815290565b90506000815111610724576040518060200160405280600081525061074f565b8061072e84610b6b565b60405160200161073f92919061124e565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b03166107b55760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610491565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906107ed82610583565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061083283610583565b9050806001600160a01b0316846001600160a01b0316148061087957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061089d5750836001600160a01b0316610892846103f6565b6001600160a01b0316145b949350505050565b826001600160a01b03166108b882610583565b6001600160a01b03161461091c5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610491565b6001600160a01b03821661097e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610491565b600081815260046020908152604080832080546001600160a01b03191690556001600160a01b0386168352600390915281208054600192906109c190849061127d565b90915550506001600160a01b03821660009081526003602052604081208054600192906109ef908490611294565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6106a6828260405180602001604052806000815250610c6c565b816001600160a01b0316836001600160a01b031603610acb5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610491565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b438484846108a5565b610b4f84848484610c9f565b6106dc5760405162461bcd60e51b8152600401610491906112ac565b606081600003610b925750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610bbc5780610ba681611235565b9150610bb59050600a83611314565b9150610b96565b60008167ffffffffffffffff811115610bd757610bd7611072565b6040519080825280601f01601f191660200182016040528015610c01576020820181803683370190505b5090505b841561089d57610c1660018361127d565b9150610c23600a86611328565b610c2e906030611294565b60f81b818381518110610c4357610c4361133c565b60200101906001600160f81b031916908160001a905350610c65600a86611314565b9450610c05565b610c768383610da0565b610c836000848484610c9f565b6105325760405162461bcd60e51b8152600401610491906112ac565b60006001600160a01b0384163b15610d9557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ce3903390899088908890600401611352565b6020604051808303816000875af1925050508015610d1e575060408051601f3d908101601f19168201909252610d1b9181019061138f565b60015b610d7b573d808015610d4c576040519150601f19603f3d011682016040523d82523d6000602084013e610d51565b606091505b508051600003610d735760405162461bcd60e51b8152600401610491906112ac565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061089d565b506001949350505050565b6001600160a01b038216610df65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610491565b6000818152600260205260409020546001600160a01b031615610e5b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610491565b6001600160a01b0382166000908152600360205260408120805460019290610e84908490611294565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146107b557600080fd5b600060208284031215610f0a57600080fd5b813561074f81610ee2565b60005b83811015610f30578181015183820152602001610f18565b838111156106dc5750506000910152565b60008151808452610f59816020860160208601610f15565b601f01601f19169290920160200192915050565b60208152600061074f6020830184610f41565b600060208284031215610f9257600080fd5b5035919050565b80356001600160a01b0381168114610fb057600080fd5b919050565b60008060408385031215610fc857600080fd5b610fd183610f99565b946020939093013593505050565b600080600060608486031215610ff457600080fd5b610ffd84610f99565b925061100b60208501610f99565b9150604084013590509250925092565b60006020828403121561102d57600080fd5b61074f82610f99565b6000806040838503121561104957600080fd5b61105283610f99565b91506020830135801515811461106757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561109e57600080fd5b6110a785610f99565b93506110b560208601610f99565b925060408501359150606085013567ffffffffffffffff808211156110d957600080fd5b818701915087601f8301126110ed57600080fd5b8135818111156110ff576110ff611072565b604051601f8201601f19908116603f0116810190838211818310171561112757611127611072565b816040528281528a602084870101111561114057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561117757600080fd5b61118083610f99565b915061118e60208401610f99565b90509250929050565b600181811c908216806111ab57607f821691505b6020821081036111cb57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000600182016112475761124761121f565b5060010190565b60008351611260818460208801610f15565b835190830190611274818360208801610f15565b01949350505050565b60008282101561128f5761128f61121f565b500390565b600082198211156112a7576112a761121f565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b600082611323576113236112fe565b500490565b600082611337576113376112fe565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061138590830184610f41565b9695505050505050565b6000602082840312156113a157600080fd5b815161074f81610ee256fea2646970667358221220fdfe1effe33de2a1d770cf3255cc2e76e3f498f98f5b59b03224bfd618be6cdc64736f6c634300080d00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220899a6ab6a17bd2199f1d2c345dfa5737d63be0147123501f2d92bfbb41af841a64736f6c634300080d0033",
    "sourceMap": "1162:2627:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1633:876;;;:::i;:::-;;2069:116:3;;;;;;:::i;:::-;;:::i;1416:96::-;;;;;;:::i;:::-;;:::i;1630:120::-;;;;;;:::i;:::-;;:::i;5141:455::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3238:32:27;;;3220:51;;3208:2;3193:18;5141:455:3;;;;;;;;1268:85;;;;;;:::i;:::-;;:::i;322:38:2:-;;-1:-1:-1;;;;;;;;;;;322:38:2;;2440:140:3;;;;;;:::i;:::-;;:::i;3369:107::-;;;;;;:::i;:::-;;:::i;1957:106::-;;;;;;:::i;:::-;;:::i;2775:527:25:-;;;:::i;3482:915:3:-;;;;;;:::i;:::-;;:::i;5602:406::-;;;;;;:::i;:::-;;:::i;1756:130::-;;;;;;:::i;:::-;;:::i;3308:479:25:-;;;:::i;1179:83:3:-;;;;;;:::i;:::-;;:::i;1819:584:1:-;;;:::i;:::-;;;5455:14:27;;5448:22;5430:41;;5418:2;5403:18;1819:584:1;5290:187:27;2515:254:25;;;:::i;3164:81:3:-;;;;;;:::i;:::-;;:::i;2304:130::-;;;;;;:::i;:::-;;:::i;2732:341::-;;;;;;:::i;:::-;;:::i;1518:106::-;;;;;;:::i;:::-;;:::i;171:28:2:-;;;;;;;;;;;;1572:26:1;;;;;;;;;1633:876:25;1678:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1667:8:25;:25;;-1:-1:-1;;;;;;1667:25:25;-1:-1:-1;;;;;1667:25:25;;;;;;;;;;1718:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1702:5:25;:31;;-1:-1:-1;;;;;;1702:31:25;-1:-1:-1;;;;;1702:31:25;;;;;;;;;;1757:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1743:3:25;:29;;-1:-1:-1;;;;;;1743:29:25;-1:-1:-1;;;;;1743:29:25;;;;;;1790:5;;1782:35;;1790:5;;;-1:-1:-1;;1806:10:25;;-1:-1:-1;1782:35:25;-1:-1:-1;1782:35:25;1806:10;1790:5;-1:-1:-1;1782:35:25;;;;;;;;;;;;;;;;;;;-1:-1:-1;1835:3:25;;1827:33;;-1:-1:-1;;;;;1835:3:25;;;;;;1849:10;;1835:3;1827:33;1835:3;1827:33;1849:10;1835:3;;1827:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;1871:6:25;:33;;-1:-1:-1;;;;;;1871:33:25;-1:-1:-1;;;;;;;;;;;1871:33:25;;;1932:39;;1953:1;;1956:14;;1932:39;;;:::i;:::-;5711:4:27;5699:17;;;5681:36;;5748:2;5733:18;;5726:34;5669:2;5654:18;1932:39:25;;;;;;;;;;;;;;;;;;;;;;;1914:15;;:57;;;;;-1:-1:-1;;;;;1914:57:25;;;;;-1:-1:-1;;;;;1914:57:25;;;;;;2020:1;2023:13;1999:38;;;;;:::i;:::-;5711:4:27;5699:17;;;5681:36;;5748:2;5733:18;;5726:34;5669:2;5654:18;1999:38:25;;;;;;;;;;;;;;;;;;;;;;;1981:15;;:56;;;;;-1:-1:-1;;;;;1981:56:25;;;;;-1:-1:-1;;;;;1981:56:25;;;;;;2086:1;2089:12;2065:37;;;;;:::i;:::-;5711:4:27;5699:17;;;5681:36;;5748:2;5733:18;;5726:34;5669:2;5654:18;2065:37:25;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2047:15:25;:55;;-1:-1:-1;;;;;;2047:55:25;-1:-1:-1;;;;;2047:55:25;;;;;;;;;;2126:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2113:10:25;:33;;-1:-1:-1;;;;;;2113:33:25;-1:-1:-1;;;;;2113:33:25;;;;;;;;;2195:5;;2169:33;;-1:-1:-1;;;2169:33:25;;2195:5;;2169:33;;;3220:51:27;2113:33:25;2169:17;;3193:18:27;;2169:33:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2156:10;:46;2212:6;;2233:5;;2212:28;;-1:-1:-1;;;2212:28:25;;-1:-1:-1;;;;;2233:5:25;;;2212:28;;;3220:51:27;2212:6:25;;;:12;;3193:18:27;;2212:28:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2250:10:25;;2287:8;;2250:53;;-1:-1:-1;;;2250:53:25;;-1:-1:-1;;;;;2287:8:25;;;2250:53;;;6703:51:27;2250:10:25;6770:18:27;;;6763:50;2250:10:25;;;-1:-1:-1;2250:28:25;;-1:-1:-1;6676:18:27;;2250:53:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2314:8:25;;2358:10;;2314:56;;-1:-1:-1;;;2314:56:25;;-1:-1:-1;;;;;2358:10:25;;;2314:56;;;3220:51:27;2314:8:25;;;-1:-1:-1;2314:35:25;;-1:-1:-1;3193:18:27;;2314:56:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2397:105:25;;;;;;;;;2419:4;2397:105;;;2425:5;;-1:-1:-1;;;;;2425:5:25;;;2397:105;;;;;;2432:7;2397:105;;;;;;2441:10;;2397:105;;;;;;-1:-1:-1;2397:105:25;;;;;;2456:4;2397:105;;;;;;2470:15;;;;;2397:105;;;;;;2488:13;2397:105;;;;;;;2381:13;:121;;-1:-1:-1;;;;;;2381:121:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2381:121:25;;;;;;;;;-1:-1:-1;;1633:876:25:o;2069:116:3:-;2132:18;;-1:-1:-1;;;2132:18:3;;-1:-1:-1;;;;;;;;;;;251:64:2;2132:7:3;;:18;;2140:3;;2145:4;;2132:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2160:18:3;;-1:-1:-1;;;2160:18:3;;-1:-1:-1;;;;;3238:32:27;;2160:18:3;;;3220:51:27;-1:-1:-1;;;;;;;;;;;251:64:2;-1:-1:-1;2160:13:3;;-1:-1:-1;3193:18:27;;2160::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2069:116;;:::o;1416:96::-;1460:22;;-1:-1:-1;;;1460:22:3;;-1:-1:-1;;;;;;;;;;;251:64:2;1460:7:3;;:22;;1468:3;;-1:-1:-1;;;1473:8:3;1460:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1492:13:3;;-1:-1:-1;;;1492:13:3;;-1:-1:-1;;;;;3238:32:27;;1492:13:3;;;3220:51:27;-1:-1:-1;;;;;;;;;;;251:64:2;-1:-1:-1;1492:8:3;;-1:-1:-1;3193:18:27;;1492:13:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:96;:::o;1630:120::-;1690:22;;-1:-1:-1;;;1690:22:3;;-1:-1:-1;;;;;;;;;;;251:64:2;1690:7:3;;:22;;1698:3;;-1:-1:-1;;;1703:8:3;1690:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1722:21:3;;-1:-1:-1;;;1722:21:3;;-1:-1:-1;;;;;7658:15:27;;;1722:21:3;;;7640:34:27;7710:15;;7690:18;;;7683:43;-1:-1:-1;;;;;;;;;;;251:64:2;-1:-1:-1;1722:8:3;;-1:-1:-1;7575:18:27;;1722:21:3;7428:304:27;5141:455:3;5301:16;;-1:-1:-1;;;5301:16:3;;5232:12;;;;-1:-1:-1;;;;;;;;;;;251:64:2;5301:10:3;;:16;;5312:4;;5301:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5301:16:3;;;;;;;;;;;;:::i;:::-;5319:4;5284:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5260:64;;5445:8;5439:15;5432:4;5422:8;5418:19;5415:1;5408:47;5400:55;-1:-1:-1;;;;;;5496:18:3;;5475:114;;;;-1:-1:-1;;;5475:114:3;;9701:2:27;5475:114:3;;;9683:21:27;9740:2;9720:18;;;9713:30;9779:34;9759:18;;;9752:62;-1:-1:-1;;;9830:18:27;;;9823:47;9887:19;;5475:114:3;;;;;;;;;5250:346;5141:455;;;;:::o;1268:85::-;-1:-1:-1;;;;;;;;;;;1315:7:3;1323:22;1341:4;1323:15;:22;:::i;:::-;1315:31;;;;;;;;;;;;;10325:25:27;;10313:2;10298:18;;10179:177;2440:140:3;2519:18;;-1:-1:-1;;;2519:18:3;;-1:-1:-1;;;;;;;;;;;251:64:2;2519:7:3;;:18;;2527:3;;2532:4;;2519:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2547:26:3;;-1:-1:-1;;;2547:26:3;;-1:-1:-1;;;;;7658:15:27;;;2547:26:3;;;7640:34:27;7710:15;;7690:18;;;7683:43;-1:-1:-1;;;;;;;;;;;251:64:2;-1:-1:-1;2547:13:3;;-1:-1:-1;7575:18:27;;2547:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2440:140;;;:::o;3369:107::-;3441:28;3446:5;3453:2;3457:4;3463:5;3441:4;:28::i;:::-;3369:107;;;:::o;1957:106::-;2006:22;;-1:-1:-1;;;2006:22:3;;-1:-1:-1;;;;;;;;;;;251:64:2;2006:7:3;;:22;;2014:3;;-1:-1:-1;;;2019:8:3;2006:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2038:18:3;;-1:-1:-1;;;2038:18:3;;-1:-1:-1;;;;;3238:32:27;;2038:18:3;;;3220:51:27;-1:-1:-1;;;;;;;;;;;251:64:2;-1:-1:-1;2038:13:3;;-1:-1:-1;3193:18:27;;2038::3;3074:203:27;2775:527:25;2827:6;;2845:5;;2827:24;;-1:-1:-1;;;2827:24:25;;-1:-1:-1;;;;;2845:5:25;;;2827:24;;;3220:51:27;2827:6:25;;;:17;;3193:18:27;;2827:24:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2861:8:25;;:38;;-1:-1:-1;;;2861:38:25;;-1:-1:-1;;;;;2861:8:25;;;;-1:-1:-1;2861:23:25;;-1:-1:-1;2861:38:25;;2885:13;;2861:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2949:8:25;;2970:10;;2949:32;;-1:-1:-1;;;2949:32:25;;;;;10325:25:27;;;;2909:37:25;;-1:-1:-1;;;;;;2949:8:25;;;;-1:-1:-1;2949:20:25;;10298:18:27;;2949:32:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2909:72;;2991:33;3000:8;:14;;;3016:7;2991:8;:33::i;:::-;3034:8;;3058:105;;;3034:8;3058:105;;;;3034:8;3058:105;;3086:5;;-1:-1:-1;;;;;3086:5:25;;;3058:105;;;;;;3093:7;3058:105;;;;;;3102:10;;3058:105;;;;;;-1:-1:-1;3058:105:25;;;;;;3117:4;3058:105;;;;;;3131:15;;;;3058:105;;;;;;3149:13;3058:105;;;;;;3034:130;;-1:-1:-1;;;3034:130:25;;12759:13:27;;12752:21;12745:29;3034:130:25;;;12727:48:27;12804:24;;12904:21;;12882:20;;;12875:51;12964:24;;12942:20;;;12935:54;13027:24;;13005:20;;;12998:54;13090:24;13068:20;;;13061:54;13153:24;13131:20;;;13124:54;13220:24;13216:33;;13194:20;;;13187:63;13288:24;;13266:20;;;13259:54;3034:8:25;;;:23;;12699:19:27;;3034:130:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3217:8:25;;3238:10;;3217:32;;-1:-1:-1;;;3217:32:25;;;;;10325:25:27;;;;3174:40:25;;-1:-1:-1;;;;;;3217:8:25;;;;-1:-1:-1;3217:20:25;;10298:18:27;;3217:32:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3174:75;;3259:36;3268:11;:17;;;3287:7;3259:8;:36::i;:::-;2817:485;;2775:527::o;3482:915:3:-;3636:38;;;-1:-1:-1;;;;;3238:32:27;;;3636:38:3;;;;3220:51:27;;;;3636:38:3;;;;;;;;;;3193:18:27;;;;3636:38:3;;;;;;;-1:-1:-1;;;;;3636:38:3;-1:-1:-1;;;3636:38:3;;;3625:50;;3601:20;;3625:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3598:77;;;3685:15;3714:7;3703:30;;;;;;;;;;;;:::i;:::-;3685:48;-1:-1:-1;3770:123:3;3888:4;3770:90;3857:2;3770:64;-1:-1:-1;;;3770:35:3;:8;3799:5;3770:28;:35::i;:::-;:52;19602:9;;;:16;;-1:-1:-1;;19602:16:3;;;;;;;;;;;;:9;19503:143;3770:64;:86;19918:10;;;:47;;;;;;;-1:-1:-1;19918:47:3;;;;;;;-1:-1:-1;;;;;19942:21:3;;;;19918:47;;;:10;19814:179;3770:90;:117;;:123::i;:::-;3938:6;3935:456;;;4000:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4000:34:3;-1:-1:-1;;;4000:34:3;;;3989:46;;3962:23;;-1:-1:-1;;;;;3989:10:3;;;:46;;4000:34;3989:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3959:76;;;4049:14;4077:10;4066:33;;;;;;;;;;;;:::i;:::-;4049:50;;4123:7;4116:4;:14;4113:143;;;4161:14;4171:4;4161:7;:14;:::i;:::-;4150:26;;;;:::i;:::-;;;4113:143;;;4226:14;4233:7;4226:4;:14;:::i;:::-;4215:26;;;;:::i;:::-;;;4113:143;4269:111;4373:6;4269:72;-1:-1:-1;;;4269:39:3;:8;4302:5;4269:32;:39::i;:111::-;3945:446;;3557:840;;3482:915;;;;:::o;5602:406::-;5726:16;;-1:-1:-1;;;5726:16:3;;5674:12;;;;-1:-1:-1;;;;;;;;;;;251:64:2;5726:10:3;;:16;;5737:4;;5726:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5726:16:3;;;;;;;;;;;;:::i;:::-;5702:40;;5863:8;5857:15;5850:4;5840:8;5836:19;5833:1;5826:47;5818:55;-1:-1:-1;;;;;;5914:18:3;;5893:108;;;;-1:-1:-1;;;5893:108:3;;13938:2:27;5893:108:3;;;13920:21:27;13977:2;13957:18;;;13950:30;14016:34;13996:18;;;13989:62;-1:-1:-1;;;14067:18:27;;;14060:41;14118:19;;5893:108:3;13736:407:27;5893:108:3;5692:316;5602:406;;;:::o;1756:130::-;1830:18;;-1:-1:-1;;;1830:18:3;;-1:-1:-1;;;;;;;;;;;251:64:2;1830:7:3;;:18;;1838:3;;1843:4;;1830:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1858:21:3;;-1:-1:-1;;;1858:21:3;;-1:-1:-1;;;;;7658:15:27;;;1858:21:3;;;7640:34:27;7710:15;;7690:18;;;7683:43;-1:-1:-1;;;;;;;;;;;251:64:2;-1:-1:-1;1858:8:3;;-1:-1:-1;7575:18:27;;1858:21:3;7428:304:27;3308:479:25;3359:6;;3372:5;;3359:19;;-1:-1:-1;;;3359:19:25;;-1:-1:-1;;;;;3372:5:25;;;3359:19;;;3220:51:27;3359:6:25;;;:12;;3193:18:27;;3359:19:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3388:8:25;;:38;;-1:-1:-1;;;3388:38:25;;-1:-1:-1;;;;;3388:8:25;;;;-1:-1:-1;3388:23:25;;-1:-1:-1;3388:38:25;;3412:13;;3388:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3477:54:25;;;;;;;;-1:-1:-1;3477:54:25;;3506:3;;-1:-1:-1;;;;;3506:3:25;;;3477:54;;;;;;3511:7;3477:54;;;;3520:10;;3477:54;;;;3563:5;;3586:6;;:17;;-1:-1:-1;;;3586:17:25;;;;;3220:51:27;;;;3477:54:25;;-1:-1:-1;3563:5:25;;;:13;;-1:-1:-1;3586:6:25;;;;;:12;;3193:18:27;;3586:17:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3613:8:25;;:55;;;-1:-1:-1;;;3613:55:25;;14385:13:27;;14378:21;14371:29;3613:55:25;;;14353:48:27;14461:4;14449:17;;14443:24;-1:-1:-1;;;;;14439:50:27;;;14417:20;;;14410:80;14534:17;;;14528:24;14506:20;;;14499:54;14609:4;14597:17;;14591:24;14569:20;;;14562:54;3613:8:25;;;-1:-1:-1;3613:29:25;;-1:-1:-1;3650:7:25;;14325:19:27;;3613:55:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3688:10:25;;3707;;3688:30;;-1:-1:-1;;;3688:30:25;;3679:45;;-1:-1:-1;;;;;;3688:10:25;;;;-1:-1:-1;3688:18:25;;-1:-1:-1;3688:30:25;;;;10325:25:27;;;10313:2;10298:18;;10179:177;3688:30:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3720:3;;-1:-1:-1;;;;;3720:3:25;3679:8;:45::i;:::-;3743:5;;3734:46;;-1:-1:-1;;;;;3743:5:25;:13;3758:21;:11;3772:7;3758:21;:::i;:::-;3734:8;:46::i;1179:83:3:-;-1:-1:-1;;;;;;;;;;;1224:7:3;1232:22;1250:4;1232:15;:22;:::i;1819:584:1:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:1;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:1;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:1;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:1;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:1;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;2515:254:25:-;2565:6;;2578:5;;2565:19;;-1:-1:-1;;;2565:19:25;;-1:-1:-1;;;;;2578:5:25;;;2565:19;;;3220:51:27;2565:6:25;;;:12;;3193:18:27;;2565:19:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2594:8:25;;:38;;-1:-1:-1;;;2594:38:25;;-1:-1:-1;;;;;2594:8:25;;;;-1:-1:-1;2594:23:25;;-1:-1:-1;2594:38:25;;2618:13;;2594:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2682:8:25;;2703:10;;2682:32;;-1:-1:-1;;;2682:32:25;;;;;10325:25:27;;;;2642:37:25;;-1:-1:-1;;;;;;2682:8:25;;;;-1:-1:-1;2682:20:25;;10298:18:27;;2682:32:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2642:72;;2724:38;2733:8;:16;;;2751:10;;2724:8;:38::i;:::-;2555:214;2515:254::o;3164:81:3:-;3221:17;;-1:-1:-1;;;3221:17:3;;-1:-1:-1;;;;;;;;;;;251:64:2;3221:7:3;;:17;;3229:2;;3233:4;;3221:17;;;:::i;2304:130::-;2369:22;;-1:-1:-1;;;2369:22:3;;-1:-1:-1;;;;;;;;;;;251:64:2;2369:7:3;;:22;;2377:3;;-1:-1:-1;;;2382:8:3;2369:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2401:26:3;;-1:-1:-1;;;2401:26:3;;-1:-1:-1;;;;;7658:15:27;;;2401:26:3;;;7640:34:27;7710:15;;7690:18;;;7683:43;-1:-1:-1;;;;;;;;;;;251:64:2;-1:-1:-1;2401:13:3;;-1:-1:-1;7575:18:27;;2401:26:3;7428:304:27;2732:341:3;2808:125;;;;;16091:2:27;16073:21;;;16130:1;16110:18;;;16103:29;-1:-1:-1;;;16163:2:27;16148:18;;16141:37;16216:3;16209:4;16194:20;;16187:33;;;16257:2;16236:19;;;16229:31;16297:34;16291:3;16276:19;;16269:63;16369:34;16363:3;16348:19;;16341:63;16441:32;16435:3;16420:19;;16413:61;16506:3;16491:19;;15788:728;2808:125:3;;;;;;;;2943:123;3061:4;2943:90;3030:2;2943:64;-1:-1:-1;;;2943:35:3;:8;2972:5;2943:28;:35::i;1518:106::-;1576:18;;-1:-1:-1;;;1576:18:3;;-1:-1:-1;;;;;;;;;;;251:64:2;1576:7:3;;:18;;1584:3;;1589:4;;1576:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1604:13:3;;-1:-1:-1;;;1604:13:3;;-1:-1:-1;;;;;3238:32:27;;1604:13:3;;;3220:51:27;-1:-1:-1;;;;;;;;;;;251:64:2;-1:-1:-1;1604:8:3;;-1:-1:-1;3193:18:27;;1604:13:3;3074:203:27;5202:262:1;5264:1;5259;:6;5255:203;;5286:41;;;;;16723:2:27;16705:21;;;16762:2;16742:18;;;16735:30;16801:34;16796:2;16781:18;;16774:62;-1:-1:-1;;;16867:2:27;16852:18;;16845:32;16909:3;16894:19;;16521:398;5286:41:1;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;:::-;;;;;;;;5441:6;:4;:6::i;19341:156:3:-;19447:12;;;:22;;-1:-1:-1;;;;;;19447:22:3;-1:-1:-1;;;;;19447:22:3;;;;;;;;;;:12;19341:156::o;20625:120::-;20705:33;20719:4;20733:3;20705:13;:33::i;3615:277:1:-;3683:1;-1:-1:-1;;;;;3678:6:1;:1;-1:-1:-1;;;;;3678:6:1;;3674:212;;3705:44;;;;;18160:2:27;18142:21;;;18199:2;18179:18;;;18172:30;18238:34;18233:2;18218:18;;18211:62;-1:-1:-1;;;18304:2:27;18289:18;;18282:35;18349:3;18334:19;;17958:401;3705:44:1;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;2410:424::-;-1:-1:-1;;;;;;;;;;;2978:55:1;3059:16;2445:359;;2645:67;;2482:11;;-1:-1:-1;;;;;;;;;;;1671:64:1;2579:43;;2645:67;;1671:64;;-1:-1:-1;;;2670:17:1;2705:4;;2645:67;;;:::i;:::-;;;;-1:-1:-1;;2645:67:1;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:1;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:1;2813:7;:14;;-1:-1:-1;;2813:14:1;;;;;2410:424::o;20979:1089:3:-;21095:12;;;;21131:9;;;;21172:11;;;;21216:10;;;21193:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21095:12:3;;;;21131:9;;;;;;21081:11;;21193:33;;21216:10;;21193:33;;21216:10;21193:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21237:17;21274:4;21280:12;21288:3;21280:7;:12::i;:::-;21257:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;21257:36:3;;;;;;;;;-1:-1:-1;;;;;21308:15:3;;;;;;:10;;;21257:36;21308:15;;;;;;-1:-1:-1;;;;;;21308:21:3;;;;;;;;;21257:36;;-1:-1:-1;21308:21:3;;:15;;21340:34;;21357:3;;21362:11;;21340:34;;:::i;:::-;;;;-1:-1:-1;;21340:34:3;;;;;;;;;21330:45;;21340:34;21330:45;;;;21308:68;;;;;;;;;;-1:-1:-1;21308:68:3;;;;21303:110;;21392:10;21397:4;21392;:10::i;:::-;;21303:110;-1:-1:-1;;;;;21445:15:3;;21422:12;21445:15;;;;;;;;;;;-1:-1:-1;;;;;;21445:21:3;;;;;;;;;21477:34;;21445:21;;21422:12;;21477:34;;21494:3;;21499:11;;21477:34;;:::i;:::-;;;;;;;;;;;;;21467:45;;;;;;21445:68;;;;;;;;;;;;21437:77;;21422:92;;21525:12;21564:17;21585:3;-1:-1:-1;;;;;21585:14:3;21600:4;21585:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21561:44:3;-1:-1:-1;21626:36:3;;-1:-1:-1;21561:44:3;21647:14;21650:11;21647:2;:14;:::i;:::-;21626;:36::i;:::-;21697:28;;-1:-1:-1;;;21697:28:3;;21619:43;;-1:-1:-1;21682:12:3;;-1:-1:-1;;;;;;;;;;;;21697:17:3;;;:28;;21715:3;;21720:4;;21697:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21682:43;;21748:4;21740;:12;21736:172;;21768:129;;-1:-1:-1;;;21768:129:3;;;;;;;:::i;:::-;21917:34;;-1:-1:-1;;;21917:34:3;;-1:-1:-1;;;;;;;;;;;21917:18:3;;;:34;;21936:3;;21941:4;;21947:3;;21917:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21968:12:3;;;21961:19;;-1:-1:-1;;;;;;21961:19:3;;;-1:-1:-1;21997:9:3;;;21990:16;;-1:-1:-1;;21990:16:3;;;22016:17;-1:-1:-1;22023:10:3;;21968:12;22016:17;:::i;:::-;22050:4;:11;;22043:18;;;21071:997;;;;;;;;20979:1089;;:::o;23412:397::-;23471:12;23499:19;23531:1;:8;23542:2;23531:13;;;;:::i;:::-;23521:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23521:24:3;;23499:46;;23560:9;23555:224;23579:1;:8;23575:1;:12;23555:224;;;23608:9;23620:1;23622;23620:4;;;;;;;;:::i;:::-;;;;;;;23608:16;;23753:1;23747;23743:2;23739:10;23735:2;23731:19;23723:6;23719:32;23712:43;23694:75;23589:3;;;;;:::i;:::-;;;;23555:224;;16121:3214;16245:12;;;;16281:9;;;;16322:11;;;;16366:10;;;16343:33;;;;;;;;;;;;;;;;;;;16208:7;;-1:-1:-1;;;;;16245:12:3;;16281:9;;;16322:11;16208:7;;16343:33;;16366:10;;16343:33;;;16366:10;16343:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;16427:15:3;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;16427:21:3;;;;;;;;;16459:34;;16343:33;;-1:-1:-1;16427:21:3;:15;;-1:-1:-1;16459:34:3;;-1:-1:-1;16343:33:3;;16481:11;;16459:34;;:::i;:::-;;;;-1:-1:-1;;16459:34:3;;;;;;;;;16449:45;;16459:34;16449:45;;;;16427:68;;;;;;;;;;-1:-1:-1;16427:68:3;;;;16423:174;;;-1:-1:-1;;;;;16518:15:3;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;16518:21:3;;;;;;;;;16550:34;;16518:21;;:10;16550:34;;16567:3;;16572:11;;16550:34;;:::i;:::-;;;;;;;;;;;;;16540:45;;;;;;16518:68;;;;;;;;;;;;16511:75;;;;;;16121:3214;;;:::o;16423:174::-;16606:17;16643:4;16649:12;16657:3;16649:7;:12::i;:::-;16626:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16606:56;;-1:-1:-1;;;;;;;;;;;15395:37:3;;-1:-1:-1;;;;;16672:19:3;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16703:12;16742:17;16763:3;-1:-1:-1;;;;;16763:14:3;16778:4;16763:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16739:44:3;-1:-1:-1;16804:36:3;;-1:-1:-1;16739:44:3;16825:14;16828:11;16825:2;:14;:::i;16804:36::-;16890:35;;-1:-1:-1;;;16890:35:3;;-1:-1:-1;;;;;3238:32:27;;16890:35:3;;;3220:51:27;16797:43:3;;-1:-1:-1;16862:22:3;;-1:-1:-1;;;;;;;;;;;;16890:21:3;;;3193:18:27;;16890:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16890:35:3;;;;;;;;;;;;:::i;:::-;16861:64;;;16939:5;:12;16955:1;16939:17;16935:2058;;16972:12;-1:-1:-1;;;;;;;;;;;15395:37:3;;-1:-1:-1;;;;;16987:17:3;;17005:3;17010:5;17016:1;17010:8;;;;;;;;:::i;:::-;;;;;;;16987:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16972:47;-1:-1:-1;16972:47:3;17033:106;;17080:44;17101:3;17114:5;17120:1;17114:8;;;;;;;;:::i;:::-;;;;;;;17106:17;;17080:44;;;;;;;:::i;:::-;;;;;;;;17033:106;17164:4;17156;:12;17152:180;;17188:129;;-1:-1:-1;;;17188:129:3;;;;;;;:::i;:::-;17350:86;17360:3;17365:4;17398:3;17403:11;17381:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17371:45;;;;;;17426:5;17432:1;17426:8;;;;;;;;:::i;:::-;;;;;;;17418:17;;17350:86;;;;;;;;;:::i;:::-;;;;;;;;17529:5;17535:1;17529:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17450:15:3;;17521:17;17450:15;;;;;;;;;;-1:-1:-1;;;;;;17450:21:3;;;;;;;;;17482:34;;17529:8;;17450:21;;17482:34;;17499:3;;17504:11;;17482:34;;:::i;:::-;;;;-1:-1:-1;;17482:34:3;;;;;;;;;17472:45;;17482:34;17472:45;;;;17450:68;;;;;;;;;;;;-1:-1:-1;17450:68:3;;;:88;;;;-1:-1:-1;;;;;17552:15:3;;;;17623:4;17552:10;;;:15;;;;;-1:-1:-1;;;;;;17552:21:3;;;;;;;;;17584:34;;17623:4;;-1:-1:-1;17584:34:3;;17601:3;;17606:11;;17584:34;;:::i;:::-;;;;;;;-1:-1:-1;;17584:34:3;;;;;;17574:45;;17584:34;17574:45;;;;17552:68;;;;;;;;;;-1:-1:-1;17552:68:3;:75;;-1:-1:-1;;17552:75:3;;;;;;;;;;-1:-1:-1;16935:2058:3;;;17663:1;17648:5;:12;:16;17644:1349;;;17685:9;17680:1190;17704:5;:12;17700:1;:16;17680:1190;;;17741:12;-1:-1:-1;;;;;;;;;;;15395:37:3;;-1:-1:-1;;;;;17756:17:3;;17774:3;17779:5;17785:1;17779:8;;;;;;;;:::i;:::-;;;;;;;17756:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17741:47;-1:-1:-1;17741:47:3;17806:114;;17857:44;17878:3;17891:5;17897:1;17891:8;;;;;;;;:::i;:::-;;;;;;;17883:17;;17857:44;;;;;;;:::i;:::-;;;;;;;;17806:114;-1:-1:-1;;;;;;;;;;;15395:37:3;;-1:-1:-1;;;;;17962:18:3;;17981:3;17986:5;17992:1;17986:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17962:53:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18033:12;18063:17;18138:3;-1:-1:-1;;;;;18138:14:3;18153:4;18138:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18120:38:3;;-1:-1:-1;18120:38:3;-1:-1:-1;18187:36:3;18120:38;18208:14;18211:11;18208:2;:14;:::i;18187:36::-;18180:43;;18264:7;:37;;;;;-1:-1:-1;;;18275:4:3;:26;18264:37;18260:539;;;18399:86;18409:3;18414:4;18447:3;18452:11;18430:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18420:45;;;;;;18475:5;18481:1;18475:8;;;;;;;;:::i;:::-;;;;;;;18467:17;;18399:86;;;;;;;;;:::i;:::-;;;;;;;;18586:5;18592:1;18586:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;18507:15:3;;18578:17;18507:15;;;;;;;;;;-1:-1:-1;;;;;;18507:21:3;;;;;;;;;18539:34;;18586:8;;18507:21;;18539:34;;18556:3;;18561:11;;18539:34;;:::i;:::-;;;;;;;;;;;;;18529:45;;;;;;18507:68;;;;;;;;;;;:88;;;;18688:4;18617;:10;;:15;18628:3;-1:-1:-1;;;;;18617:15:3;-1:-1:-1;;;;;18617:15:3;;;;;;;;;;;;:21;18633:4;-1:-1:-1;;;;;18617:21:3;;-1:-1:-1;;;;;18617:21:3;;;;;;;;;;;;;:68;18666:3;18671:11;18649:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18639:45;;;;;;18617:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15395:37:3;;-1:-1:-1;;;;;18714:18:3;;18733:3;18738:5;18744:1;18738:8;;;;;;;;:::i;:::-;;;;;;;18748:4;18714:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18775:5;;;;;18260:539;-1:-1:-1;;;;;;;;;;;15395:37:3;;-1:-1:-1;;;;;18816:18:3;;18835:3;18840:5;18846:1;18840:8;;;;;;;;:::i;:::-;;;;;;;18850:4;18816:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17723:1147;;;17718:3;;;;;:::i;:::-;;;;17680:1190;;;;17644:1349;;;18900:82;;;-1:-1:-1;;;18900:82:3;;23264:2:27;18900:82:3;;;23246:21:27;23283:18;;;23276:30;;;;23342:34;23322:18;;;23315:62;23413:34;23393:18;;;23386:62;23465:19;;18900:82:3;23062:428:27;18900:82:3;-1:-1:-1;;;;;19011:15:3;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;19011:21:3;;;;;;;;;19043:34;;19011:21;;:15;19043:34;;19060:3;;19065:11;;19043:34;;:::i;:::-;;;;-1:-1:-1;;19043:34:3;;;;;;;;;19033:45;;19043:34;19033:45;;;;19011:68;;;;;;;;;;-1:-1:-1;19011:68:3;;;;19003:128;;;;-1:-1:-1;;;19003:128:3;;23697:2:27;19003:128:3;;;23679:21:27;23736:2;23716:18;;;23709:30;23775:34;23755:18;;;23748:62;-1:-1:-1;;;23826:18:27;;;23819:45;23881:19;;19003:128:3;23495:411:27;19003:128:3;19149:12;;;19142:19;;-1:-1:-1;;;;;;19142:19:3;;;19178:9;;;19171:16;;-1:-1:-1;;19171:16:3;;;19197:17;-1:-1:-1;19204:10:3;;19149:12;19197:17;:::i;:::-;19224:18;19231:11;;;19224:18;;;-1:-1:-1;;;;;19260:15:3;;;;;;;;;;;;-1:-1:-1;;;;;;19260:21:3;;;;;;;;;19292:34;;19260:21;;19224:18;19292:34;;19309:3;;19314:11;;19292:34;;:::i;:::-;;;;;;;;;;;;;19282:45;;;;;;19260:68;;;;;;;;;;;;19253:75;;;;;;;;;16121:3214;;;:::o;23109:297::-;23183:7;23202:11;23224;23249:2;23238:1;:8;:13;:29;;23259:1;:8;23238:29;;;23254:2;23238:29;23224:43;;23282:6;23277:103;23298:3;23294:1;:7;23277:103;;;23363:5;:1;23367;23363:5;:::i;:::-;23337:1;23339:10;23348:1;23339:6;:10;:::i;:::-;23337:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;23337:13:3;23329:40;;23322:47;;;;;23303:3;;;;:::i;:::-;;;;23277:103;;;-1:-1:-1;23396:3:3;;23109:297;-1:-1:-1;;;;23109:297:3:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:27:-;-1:-1:-1;;;;;89:31:27;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:27:o;470:247::-;529:6;582:2;570:9;561:7;557:23;553:32;550:52;;;598:1;595;588:12;550:52;637:9;624:23;656:31;681:5;656:31;:::i;:::-;706:5;470:247;-1:-1:-1;;;470:247:27:o;722:388::-;790:6;798;851:2;839:9;830:7;826:23;822:32;819:52;;;867:1;864;857:12;819:52;906:9;893:23;925:31;950:5;925:31;:::i;:::-;975:5;-1:-1:-1;1032:2:27;1017:18;;1004:32;1045:33;1004:32;1045:33;:::i;:::-;1097:7;1087:17;;;722:388;;;;;:::o;1115:127::-;1176:10;1171:3;1167:20;1164:1;1157:31;1207:4;1204:1;1197:15;1231:4;1228:1;1221:15;1247:275;1318:2;1312:9;1383:2;1364:13;;-1:-1:-1;;1360:27:27;1348:40;;1418:18;1403:34;;1439:22;;;1400:62;1397:88;;;1465:18;;:::i;:::-;1501:2;1494:22;1247:275;;-1:-1:-1;1247:275:27:o;1527:187::-;1576:4;1609:18;1601:6;1598:30;1595:56;;;1631:18;;:::i;:::-;-1:-1:-1;1697:2:27;1676:15;-1:-1:-1;;1672:29:27;1703:4;1668:40;;1527:187::o;1719:338::-;1784:5;1813:53;1829:36;1858:6;1829:36;:::i;:::-;1813:53;:::i;:::-;1804:62;;1889:6;1882:5;1875:21;1929:3;1920:6;1915:3;1911:16;1908:25;1905:45;;;1946:1;1943;1936:12;1905:45;1995:6;1990:3;1983:4;1976:5;1972:16;1959:43;2049:1;2042:4;2033:6;2026:5;2022:18;2018:29;2011:40;1719:338;;;;;:::o;2062:222::-;2105:5;2158:3;2151:4;2143:6;2139:17;2135:27;2125:55;;2176:1;2173;2166:12;2125:55;2198:80;2274:3;2265:6;2252:20;2245:4;2237:6;2233:17;2198:80;:::i;2289:671::-;2376:6;2384;2437:2;2425:9;2416:7;2412:23;2408:32;2405:52;;;2453:1;2450;2443:12;2405:52;2493:9;2480:23;2522:18;2563:2;2555:6;2552:14;2549:34;;;2579:1;2576;2569:12;2549:34;2602:50;2644:7;2635:6;2624:9;2620:22;2602:50;:::i;:::-;2592:60;;2705:2;2694:9;2690:18;2677:32;2661:48;;2734:2;2724:8;2721:16;2718:36;;;2750:1;2747;2740:12;2718:36;-1:-1:-1;2773:24:27;;2828:4;2820:13;;2816:27;-1:-1:-1;2806:55:27;;2857:1;2854;2847:12;2806:55;2880:74;2946:7;2941:2;2928:16;2923:2;2919;2915:11;2880:74;:::i;:::-;2870:84;;;2289:671;;;;;:::o;3282:180::-;3341:6;3394:2;3382:9;3373:7;3369:23;3365:32;3362:52;;;3410:1;3407;3400:12;3362:52;-1:-1:-1;3433:23:27;;3282:180;-1:-1:-1;3282:180:27:o;3686:456::-;3763:6;3771;3779;3832:2;3820:9;3811:7;3807:23;3803:32;3800:52;;;3848:1;3845;3838:12;3800:52;3887:9;3874:23;3906:31;3931:5;3906:31;:::i;:::-;3956:5;-1:-1:-1;4013:2:27;3998:18;;3985:32;4026:33;3985:32;4026:33;:::i;:::-;3686:456;;4078:7;;-1:-1:-1;;;4132:2:27;4117:18;;;;4104:32;;3686:456::o;4147:118::-;4233:5;4226:13;4219:21;4212:5;4209:32;4199:60;;4255:1;4252;4245:12;4270:592;4353:6;4361;4369;4377;4430:3;4418:9;4409:7;4405:23;4401:33;4398:53;;;4447:1;4444;4437:12;4398:53;4486:9;4473:23;4505:31;4530:5;4505:31;:::i;:::-;4555:5;-1:-1:-1;4612:2:27;4597:18;;4584:32;4625:33;4584:32;4625:33;:::i;:::-;4677:7;-1:-1:-1;4731:2:27;4716:18;;4703:32;;-1:-1:-1;4787:2:27;4772:18;;4759:32;4800:30;4759:32;4800:30;:::i;:::-;4270:592;;;;-1:-1:-1;4270:592:27;;-1:-1:-1;;4270:592:27:o;4867:322::-;4936:6;4989:2;4977:9;4968:7;4964:23;4960:32;4957:52;;;5005:1;5002;4995:12;4957:52;5045:9;5032:23;5078:18;5070:6;5067:30;5064:50;;;5110:1;5107;5100:12;5064:50;5133;5175:7;5166:6;5155:9;5151:22;5133:50;:::i;:::-;5123:60;4867:322;-1:-1:-1;;;;4867:322:27:o;6346:184::-;6416:6;6469:2;6457:9;6448:7;6444:23;6440:32;6437:52;;;6485:1;6482;6475:12;6437:52;-1:-1:-1;6508:16:27;;6346:184;-1:-1:-1;6346:184:27:o;6824:274::-;-1:-1:-1;;;;;7016:32:27;;;;6998:51;;7080:2;7065:18;;7058:34;6986:2;6971:18;;6824:274::o;7737:258::-;7809:1;7819:113;7833:6;7830:1;7827:13;7819:113;;;7909:11;;;7903:18;7890:11;;;7883:39;7855:2;7848:10;7819:113;;;7950:6;7947:1;7944:13;7941:48;;;7985:1;7976:6;7971:3;7967:16;7960:27;7941:48;;7737:258;;;:::o;8000:383::-;8149:2;8138:9;8131:21;8112:4;8181:6;8175:13;8224:6;8219:2;8208:9;8204:18;8197:34;8240:66;8299:6;8294:2;8283:9;8279:18;8274:2;8266:6;8262:15;8240:66;:::i;:::-;8367:2;8346:15;-1:-1:-1;;8342:29:27;8327:45;;;;8374:2;8323:54;;8000:383;-1:-1:-1;;8000:383:27:o;8388:635::-;8467:6;8520:2;8508:9;8499:7;8495:23;8491:32;8488:52;;;8536:1;8533;8526:12;8488:52;8569:9;8563:16;8602:18;8594:6;8591:30;8588:50;;;8634:1;8631;8624:12;8588:50;8657:22;;8710:4;8702:13;;8698:27;-1:-1:-1;8688:55:27;;8739:1;8736;8729:12;8688:55;8768:2;8762:9;8793:49;8809:32;8838:2;8809:32;:::i;8793:49::-;8865:2;8858:5;8851:17;8905:7;8900:2;8895;8891;8887:11;8883:20;8880:33;8877:53;;;8926:1;8923;8916:12;8877:53;8939:54;8990:2;8985;8978:5;8974:14;8969:2;8965;8961:11;8939:54;:::i;:::-;9012:5;8388:635;-1:-1:-1;;;;;8388:635:27:o;9028:466::-;9203:3;9241:6;9235:13;9257:53;9303:6;9298:3;9291:4;9283:6;9279:17;9257:53;:::i;:::-;9373:13;;9332:16;;;;9395:57;9373:13;9332:16;9429:4;9417:17;;9395:57;:::i;:::-;9468:20;;9028:466;-1:-1:-1;;;;9028:466:27:o;9917:127::-;9978:10;9973:3;9969:20;9966:1;9959:31;10009:4;10006:1;9999:15;10033:4;10030:1;10023:15;10049:125;10089:4;10117:1;10114;10111:8;10108:34;;;10122:18;;:::i;:::-;-1:-1:-1;10159:9:27;;10049:125::o;10504:864::-;10723:13;;10776:4;10761:20;;5264:13;5257:21;5245:34;;10829:1;10825:17;-1:-1:-1;;;;;10821:43:27;;;10881:4;10866:20;;3019:44;10943:4;10931:17;;10925:24;10918:4;10903:20;;10896:54;11006:4;10994:17;;10988:24;10981:4;10966:20;;10959:54;11069:4;11057:17;;11051:24;11044:4;11029:20;;11022:54;11132:4;11120:17;;11114:24;11107:4;11092:20;;11085:54;11229:4;11217:17;;11211:24;10457:36;11293:4;11278:20;;3019:44;11355:4;11343:17;;;11337:24;11330:4;11315:20;;11308:54;10693:3;10678:19;;10504:864::o;11373:138::-;11452:13;;11474:31;11452:13;11474:31;:::i;11516:1001::-;11615:6;11646:3;11690:2;11678:9;11669:7;11665:23;11661:32;11658:52;;;11706:1;11703;11696:12;11658:52;11739:2;11733:9;11769:15;;;;11814:18;11799:34;;11835:22;;;11796:62;11793:88;;;11861:18;;:::i;:::-;11901:10;11897:2;11890:22;11940:9;11934:16;11921:29;;11959:28;11981:5;11959:28;:::i;:::-;12011:5;12003:6;11996:21;12050:49;12095:2;12084:9;12080:18;12050:49;:::i;:::-;12045:2;12037:6;12033:15;12026:74;12154:2;12143:9;12139:18;12133:25;12128:2;12120:6;12116:15;12109:50;12213:2;12202:9;12198:18;12192:25;12187:2;12179:6;12175:15;12168:50;12273:3;12262:9;12258:19;12252:26;12246:3;12238:6;12234:16;12227:52;12334:3;12323:9;12319:19;12313:26;12307:3;12299:6;12295:16;12288:52;12374:50;12419:3;12408:9;12404:19;12374:50;:::i;:::-;12368:3;12360:6;12356:16;12349:76;12480:3;12469:9;12465:19;12459:26;12453:3;12445:6;12441:16;12434:52;12505:6;12495:16;;;;11516:1001;;;;:::o;13324:274::-;13453:3;13491:6;13485:13;13507:53;13553:6;13548:3;13541:4;13533:6;13529:17;13507:53;:::i;:::-;13576:16;;;;;13324:274;-1:-1:-1;;13324:274:27:o;13603:128::-;13643:3;13674:1;13670:6;13667:1;13664:13;13661:39;;;13680:18;;:::i;:::-;-1:-1:-1;13716:9:27;;13603:128::o;14627:251::-;14697:6;14750:2;14738:9;14729:7;14725:23;14721:32;14718:52;;;14766:1;14763;14756:12;14718:52;14798:9;14792:16;14817:31;14842:5;14817:31;:::i;15162:371::-;-1:-1:-1;;;;;;15347:33:27;;15335:46;;15404:13;;15317:3;;15426:61;15404:13;15476:1;15467:11;;15460:4;15448:17;;15426:61;:::i;:::-;15507:16;;;;15525:1;15503:24;;15162:371;-1:-1:-1;;;15162:371:27:o;15538:245::-;15605:6;15658:2;15646:9;15637:7;15633:23;15629:32;15626:52;;;15674:1;15671;15664:12;15626:52;15706:9;15700:16;15725:28;15747:5;15725:28;:::i;17088:348::-;17318:2;17307:9;17300:21;17281:4;17338:49;17383:2;17372:9;17368:18;17001:2;16989:15;;-1:-1:-1;;;17029:4:27;17020:14;;17013:36;17074:2;17065:12;;16924:159;17338:49;17330:57;;17423:6;17418:2;17407:9;17403:18;17396:34;17088:348;;;;:::o;17605:::-;17835:2;17824:9;17817:21;17798:4;17855:49;17900:2;17889:9;17885:18;17518:2;17506:15;;-1:-1:-1;;;17546:4:27;17537:14;;17530:36;17591:2;17582:12;;17441:159;18364:374;18594:2;18583:9;18576:21;18557:4;18614:49;18659:2;18648:9;18644:18;17001:2;16989:15;;-1:-1:-1;;;17029:4:27;17020:14;;17013:36;17074:2;17065:12;;16924:159;18614:49;-1:-1:-1;;;;;18699:32:27;;;;18694:2;18679:18;;;;18672:60;;;;-1:-1:-1;18606:57:27;18364:374::o;18743:::-;18973:2;18962:9;18955:21;18936:4;18993:49;19038:2;19027:9;19023:18;17518:2;17506:15;;-1:-1:-1;;;17546:4:27;17537:14;;17530:36;17591:2;17582:12;;17441:159;19122:345;-1:-1:-1;;;;;19342:32:27;;;;19324:51;;19406:2;19391:18;;19384:34;;;;19449:2;19434:18;;19427:34;19312:2;19297:18;;19122:345::o;19472:610::-;19718:13;;19661:3;;19692;;19771:4;19798:15;;;19661:3;19841:175;19855:6;19852:1;19849:13;19841:175;;;19918:13;;19904:28;;19954:14;;;;19991:15;;;;19877:1;19870:9;19841:175;;;-1:-1:-1;;20025:21:27;;;-1:-1:-1;20062:14:27;;;;;-1:-1:-1;;;19472:610:27:o;20087:168::-;20127:7;20193:1;20189;20185:6;20181:14;20178:1;20175:21;20170:1;20163:9;20156:17;20152:45;20149:71;;;20200:18;;:::i;:::-;-1:-1:-1;20240:9:27;;20087:168::o;20449:556::-;20651:2;20633:21;;;20690:3;20670:18;;;20663:31;20730:34;20725:2;20710:18;;20703:62;20801:34;20796:2;20781:18;;20774:62;20873:34;20867:3;20852:19;;20845:63;-1:-1:-1;;;20939:3:27;20924:19;;20917:46;20995:3;20980:19;;20449:556::o;21010:127::-;21071:10;21066:3;21062:20;21059:1;21052:31;21102:4;21099:1;21092:15;21126:4;21123:1;21116:15;21142:135;21181:3;21202:17;;;21199:43;;21222:18;;:::i;:::-;-1:-1:-1;21269:1:27;21258:13;;21142:135::o;21282:709::-;21347:5;21400:3;21393:4;21385:6;21381:17;21377:27;21367:55;;21418:1;21415;21408:12;21367:55;21447:6;21441:13;21473:4;21496:18;21492:2;21489:26;21486:52;;;21518:18;;:::i;:::-;21564:2;21561:1;21557:10;21587:28;21611:2;21607;21603:11;21587:28;:::i;:::-;21649:15;;;21719;;;21715:24;;;21680:12;;;;21751:15;;;21748:35;;;21779:1;21776;21769:12;21748:35;21815:2;21807:6;21803:15;21792:26;;21827:135;21843:6;21838:3;21835:15;21827:135;;;21909:10;;21897:23;;21860:12;;;;21940;;;;21827:135;;;21980:5;21282:709;-1:-1:-1;;;;;;;21282:709:27:o;21996:614::-;22125:6;22133;22186:2;22174:9;22165:7;22161:23;22157:32;22154:52;;;22202:1;22199;22192:12;22154:52;22235:9;22229:16;22264:18;22305:2;22297:6;22294:14;22291:34;;;22321:1;22318;22311:12;22291:34;22344:72;22408:7;22399:6;22388:9;22384:22;22344:72;:::i;:::-;22334:82;;22462:2;22451:9;22447:18;22441:25;22425:41;;22491:2;22481:8;22478:16;22475:36;;;22507:1;22504;22497:12;22475:36;;22530:74;22596:7;22585:8;22574:9;22570:24;22530:74;:::i;22615:442::-;-1:-1:-1;;;;;22862:32:27;;;;22844:51;;-1:-1:-1;;;;;;22931:33:27;;;;22926:2;22911:18;;22904:61;22996:2;22981:18;;22974:34;23039:2;23024:18;;23017:34;22831:3;22816:19;;22615:442::o",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/alexander/dev/p2ppredict/contracts/src/test/Exchange.t.sol",
    "exportedSymbols": {
      "CheatCodes": [
        24192
      ],
      "DSTest": [
        1832
      ],
      "ERC721": [
        22339
      ],
      "ERC721Holder": [
        22652
      ],
      "Exchange": [
        23581
      ],
      "ExchangeTest": [
        24577
      ],
      "IERC721Receiver": [
        22473
      ],
      "MockCollection": [
        24219
      ],
      "MockV3Aggregator": [
        24777
      ],
      "OrderTypes": [
        24132
      ],
      "PredictionMarket": [
        24044
      ],
      "Receiver": [
        24584
      ],
      "Script": [
        1864
      ],
      "StdStorage": [
        3281
      ],
      "Test": [
        3183
      ],
      "Vm": [
        4952
      ],
      "console": [
        13016
      ],
      "console2": [
        21080
      ],
      "stdError": [
        3253
      ],
      "stdMath": [
        4530
      ],
      "stdStorage": [
        4383
      ]
    },
    "id": 24585,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24134,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:25"
      },
      {
        "absolutePath": "/Users/alexander/dev/p2ppredict/contracts/src/Exchange.sol",
        "file": "../Exchange.sol",
        "id": 24136,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24585,
        "sourceUnit": 23582,
        "src": "64:41:25",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24135,
              "name": "Exchange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23581,
              "src": "72:8:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/p2ppredict/contracts/src/PredictionMarket.sol",
        "file": "../PredictionMarket.sol",
        "id": 24138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24585,
        "sourceUnit": 24045,
        "src": "106:57:25",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24137,
              "name": "PredictionMarket",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24044,
              "src": "114:16:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/p2ppredict/contracts/src/test/mocks/MockV3Aggregator.sol",
        "file": "./mocks/MockV3Aggregator.sol",
        "id": 24139,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24585,
        "sourceUnit": 24778,
        "src": "164:38:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/p2ppredict/contracts/lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "id": 24140,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24585,
        "sourceUnit": 4531,
        "src": "203:28:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/p2ppredict/contracts/lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "id": 24141,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24585,
        "sourceUnit": 22653,
        "src": "232:78:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/p2ppredict/contracts/src/libraries/OrderTypesNew.sol",
        "file": "../libraries/OrderTypesNew.sol",
        "id": 24143,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24585,
        "sourceUnit": 24133,
        "src": "312:58:25",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24142,
              "name": "OrderTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24132,
              "src": "320:10:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/p2ppredict/contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "id": 24145,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24585,
        "sourceUnit": 22340,
        "src": "371:80:25",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24144,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22339,
              "src": "379:6:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CheatCodes",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 24192,
        "linearizedBaseContracts": [
          24192
        ],
        "name": "CheatCodes",
        "nameLocation": "463:10:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "ca669fa7",
            "id": 24150,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "prank",
            "nameLocation": "489:5:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24147,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24150,
                  "src": "495:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "494:9:25"
            },
            "returnParameters": {
              "id": 24149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:0:25"
            },
            "scope": 24192,
            "src": "480:33:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "f28dceb3",
            "id": 24155,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "expectRevert",
            "nameLocation": "528:12:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24152,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24155,
                  "src": "541:12:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24151,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "540:14:25"
            },
            "returnParameters": {
              "id": 24154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:0:25"
            },
            "scope": 24192,
            "src": "519:45:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "4c63e562",
            "id": 24160,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "assume",
            "nameLocation": "579:6:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24157,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24160,
                  "src": "586:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24156,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "585:6:25"
            },
            "returnParameters": {
              "id": 24159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:0:25"
            },
            "scope": 24192,
            "src": "570:31:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "e5d6bf02",
            "id": 24165,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "warp",
            "nameLocation": "616:4:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24165,
                  "src": "621:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "621:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "620:9:25"
            },
            "returnParameters": {
              "id": 24164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "638:0:25"
            },
            "scope": 24192,
            "src": "607:32:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "06447d56",
            "id": 24170,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "startPrank",
            "nameLocation": "654:10:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24167,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24170,
                  "src": "665:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "665:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "664:9:25"
            },
            "returnParameters": {
              "id": 24169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:0:25"
            },
            "scope": 24192,
            "src": "645:38:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "45b56078",
            "id": 24177,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "startPrank",
            "nameLocation": "698:10:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24172,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24177,
                  "src": "709:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "709:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24174,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24177,
                  "src": "718:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "708:18:25"
            },
            "returnParameters": {
              "id": 24176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "735:0:25"
            },
            "scope": 24192,
            "src": "689:47:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "90c5013b",
            "id": 24180,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stopPrank",
            "nameLocation": "751:9:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "760:2:25"
            },
            "returnParameters": {
              "id": 24179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:0:25"
            },
            "scope": 24192,
            "src": "742:30:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "491cc7c2",
            "id": 24191,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "expectEmit",
            "nameLocation": "787:10:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24182,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24191,
                  "src": "807:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24181,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24184,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24191,
                  "src": "821:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24183,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24186,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24191,
                  "src": "835:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24185,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24188,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24191,
                  "src": "849:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24187,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "797:62:25"
            },
            "returnParameters": {
              "id": 24190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "868:0:25"
            },
            "scope": 24192,
            "src": "778:91:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 24585,
        "src": "453:418:25",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "6e616d65",
                "id": 24194,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "907:6:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60",
                  "typeString": "literal_string \"name\""
                },
                "value": "name"
              },
              {
                "hexValue": "73796d626f6c",
                "id": 24195,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "915:8:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_be16b05c387bab9ac31918a3e61672f4618601f3c598a2f3f2710f37053e1ea4",
                  "typeString": "literal_string \"symbol\""
                },
                "value": "symbol"
              }
            ],
            "baseName": {
              "id": 24193,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22339,
              "src": "900:6:25"
            },
            "id": 24196,
            "nodeType": "InheritanceSpecifier",
            "src": "900:24:25"
          }
        ],
        "canonicalName": "MockCollection",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24219,
        "linearizedBaseContracts": [
          24219,
          22339,
          22625,
          22455,
          23254,
          23266,
          23004
        ],
        "name": "MockCollection",
        "nameLocation": "882:14:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "009a9b7b",
            "id": 24198,
            "mutability": "mutable",
            "name": "currentTokenId",
            "nameLocation": "946:14:25",
            "nodeType": "VariableDeclaration",
            "scope": 24219,
            "src": "931:29:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24197,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "931:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 24217,
              "nodeType": "Block",
              "src": "1035:123:25",
              "statements": [
                {
                  "assignments": [
                    24206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24206,
                      "mutability": "mutable",
                      "name": "newTokenId",
                      "nameLocation": "1053:10:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 24217,
                      "src": "1045:18:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24205,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1045:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24209,
                  "initialValue": {
                    "id": 24208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "1066:16:25",
                    "subExpression": {
                      "id": 24207,
                      "name": "currentTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24198,
                      "src": "1068:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1045:37:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24211,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24200,
                        "src": "1102:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24212,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24206,
                        "src": "1113:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24210,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21957,
                        21986
                      ],
                      "referencedDeclaration": 21957,
                      "src": "1092:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:32:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24214,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:32:25"
                },
                {
                  "expression": {
                    "id": 24215,
                    "name": "newTokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24206,
                    "src": "1141:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 24204,
                  "id": 24216,
                  "nodeType": "Return",
                  "src": "1134:17:25"
                }
              ]
            },
            "functionSelector": "755edd17",
            "id": 24218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "976:6:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24200,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "991:9:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 24218,
                  "src": "983:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "983:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "982:19:25"
            },
            "returnParameters": {
              "id": 24204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24203,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24218,
                  "src": "1026:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1025:9:25"
            },
            "scope": 24219,
            "src": "967:191:25",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 24585,
        "src": "873:287:25",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24220,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3183,
              "src": "1187:4:25"
            },
            "id": 24221,
            "nodeType": "InheritanceSpecifier",
            "src": "1187:4:25"
          }
        ],
        "canonicalName": "ExchangeTest",
        "contractDependencies": [
          23581,
          24219,
          24584,
          24777
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24577,
        "linearizedBaseContracts": [
          24577,
          3183,
          1864,
          1832
        ],
        "name": "ExchangeTest",
        "nameLocation": "1171:12:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24224,
            "mutability": "mutable",
            "name": "predictionMarket",
            "nameLocation": "1224:16:25",
            "nodeType": "VariableDeclaration",
            "scope": 24577,
            "src": "1198:42:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PredictionMarket_$24044",
              "typeString": "contract PredictionMarket"
            },
            "typeName": {
              "id": 24223,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24222,
                "name": "PredictionMarket",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24044,
                "src": "1198:16:25"
              },
              "referencedDeclaration": 24044,
              "src": "1198:16:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PredictionMarket_$24044",
                "typeString": "contract PredictionMarket"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24227,
            "mutability": "mutable",
            "name": "exchange",
            "nameLocation": "1264:8:25",
            "nodeType": "VariableDeclaration",
            "scope": 24577,
            "src": "1246:26:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Exchange_$23581",
              "typeString": "contract Exchange"
            },
            "typeName": {
              "id": 24226,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24225,
                "name": "Exchange",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23581,
                "src": "1246:8:25"
              },
              "referencedDeclaration": 23581,
              "src": "1246:8:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Exchange_$23581",
                "typeString": "contract Exchange"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24229,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1296:5:25",
            "nodeType": "VariableDeclaration",
            "scope": 24577,
            "src": "1279:22:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24228,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1279:7:25",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24231,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1324:3:25",
            "nodeType": "VariableDeclaration",
            "scope": 24577,
            "src": "1307:20:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24230,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1307:7:25",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24234,
            "mutability": "mutable",
            "name": "cheats",
            "nameLocation": "1353:6:25",
            "nodeType": "VariableDeclaration",
            "scope": 24577,
            "src": "1333:26:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CheatCodes_$24192",
              "typeString": "contract CheatCodes"
            },
            "typeName": {
              "id": 24233,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24232,
                "name": "CheatCodes",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24192,
                "src": "1333:10:25"
              },
              "referencedDeclaration": 24192,
              "src": "1333:10:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CheatCodes_$24192",
                "typeString": "contract CheatCodes"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24237,
            "mutability": "mutable",
            "name": "btcUsdPriceFeed",
            "nameLocation": "1392:15:25",
            "nodeType": "VariableDeclaration",
            "scope": 24577,
            "src": "1366:41:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
              "typeString": "contract MockV3Aggregator"
            },
            "typeName": {
              "id": 24236,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24235,
                "name": "MockV3Aggregator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24777,
                "src": "1366:16:25"
              },
              "referencedDeclaration": 24777,
              "src": "1366:16:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                "typeString": "contract MockV3Aggregator"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24240,
            "mutability": "mutable",
            "name": "ethUsdPriceFeed",
            "nameLocation": "1439:15:25",
            "nodeType": "VariableDeclaration",
            "scope": 24577,
            "src": "1413:41:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
              "typeString": "contract MockV3Aggregator"
            },
            "typeName": {
              "id": 24239,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24238,
                "name": "MockV3Aggregator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24777,
                "src": "1413:16:25"
              },
              "referencedDeclaration": 24777,
              "src": "1413:16:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                "typeString": "contract MockV3Aggregator"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24243,
            "mutability": "mutable",
            "name": "bnbUsdPriceFeed",
            "nameLocation": "1486:15:25",
            "nodeType": "VariableDeclaration",
            "scope": 24577,
            "src": "1460:41:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
              "typeString": "contract MockV3Aggregator"
            },
            "typeName": {
              "id": 24242,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24241,
                "name": "MockV3Aggregator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24777,
                "src": "1460:16:25"
              },
              "referencedDeclaration": 24777,
              "src": "1460:16:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                "typeString": "contract MockV3Aggregator"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24246,
            "mutability": "mutable",
            "name": "collection",
            "nameLocation": "1532:10:25",
            "nodeType": "VariableDeclaration",
            "scope": 24577,
            "src": "1508:34:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockCollection_$24219",
              "typeString": "contract MockCollection"
            },
            "typeName": {
              "id": 24245,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24244,
                "name": "MockCollection",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24219,
                "src": "1508:14:25"
              },
              "referencedDeclaration": 24219,
              "src": "1508:14:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockCollection_$24219",
                "typeString": "contract MockCollection"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24249,
            "mutability": "mutable",
            "name": "aliceMakerAsk",
            "nameLocation": "1580:13:25",
            "nodeType": "VariableDeclaration",
            "scope": 24577,
            "src": "1549:44:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_MakerOrder_$24122_storage",
              "typeString": "struct OrderTypes.MakerOrder"
            },
            "typeName": {
              "id": 24248,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24247,
                "name": "OrderTypes.MakerOrder",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24122,
                "src": "1549:21:25"
              },
              "referencedDeclaration": 24122,
              "src": "1549:21:25",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_MakerOrder_$24122_storage_ptr",
                "typeString": "struct OrderTypes.MakerOrder"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24251,
            "mutability": "mutable",
            "name": "aliceNftId",
            "nameLocation": "1616:10:25",
            "nodeType": "VariableDeclaration",
            "scope": 24577,
            "src": "1599:27:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24250,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1599:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24408,
              "nodeType": "Block",
              "src": "1657:852:25",
              "statements": [
                {
                  "expression": {
                    "id": 24259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24254,
                      "name": "exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24227,
                      "src": "1667:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Exchange_$23581",
                        "typeString": "contract Exchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1678:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Exchange_$23581_$",
                          "typeString": "function () returns (contract Exchange)"
                        },
                        "typeName": {
                          "id": 24256,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24255,
                            "name": "Exchange",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23581,
                            "src": "1682:8:25"
                          },
                          "referencedDeclaration": 23581,
                          "src": "1682:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$23581",
                            "typeString": "contract Exchange"
                          }
                        }
                      },
                      "id": 24258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1678:14:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Exchange_$23581",
                        "typeString": "contract Exchange"
                      }
                    },
                    "src": "1667:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Exchange_$23581",
                      "typeString": "contract Exchange"
                    }
                  },
                  "id": 24260,
                  "nodeType": "ExpressionStatement",
                  "src": "1667:25:25"
                },
                {
                  "expression": {
                    "id": 24269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24261,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24229,
                      "src": "1702:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1718:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Receiver_$24584_$",
                              "typeString": "function () returns (contract Receiver)"
                            },
                            "typeName": {
                              "id": 24265,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24264,
                                "name": "Receiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24584,
                                "src": "1722:8:25"
                              },
                              "referencedDeclaration": 24584,
                              "src": "1722:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Receiver_$24584",
                                "typeString": "contract Receiver"
                              }
                            }
                          },
                          "id": 24267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1718:14:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Receiver_$24584",
                            "typeString": "contract Receiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Receiver_$24584",
                            "typeString": "contract Receiver"
                          }
                        ],
                        "id": 24263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1710:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24262,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1710:7:25",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1710:23:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1702:31:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24270,
                  "nodeType": "ExpressionStatement",
                  "src": "1702:31:25"
                },
                {
                  "expression": {
                    "id": 24279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24271,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24231,
                      "src": "1743:3:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1757:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Receiver_$24584_$",
                              "typeString": "function () returns (contract Receiver)"
                            },
                            "typeName": {
                              "id": 24275,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24274,
                                "name": "Receiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24584,
                                "src": "1761:8:25"
                              },
                              "referencedDeclaration": 24584,
                              "src": "1761:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Receiver_$24584",
                                "typeString": "contract Receiver"
                              }
                            }
                          },
                          "id": 24277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1757:14:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Receiver_$24584",
                            "typeString": "contract Receiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Receiver_$24584",
                            "typeString": "contract Receiver"
                          }
                        ],
                        "id": 24273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1749:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24272,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1749:7:25",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1749:23:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1743:29:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24280,
                  "nodeType": "ExpressionStatement",
                  "src": "1743:29:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 24286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1806:10:25",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 24283,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24229,
                            "src": "1790:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1782:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 24281,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1782:8:25",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1782:14:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 24285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1782:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 24287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1782:35:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24288,
                  "nodeType": "ExpressionStatement",
                  "src": "1782:35:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 24294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1849:10:25",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 24291,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24231,
                            "src": "1835:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1827:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 24289,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1827:8:25",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1827:12:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 24293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1827:21:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 24295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1827:33:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24296,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:33:25"
                },
                {
                  "expression": {
                    "id": 24301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24297,
                      "name": "cheats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24234,
                      "src": "1871:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CheatCodes_$24192",
                        "typeString": "contract CheatCodes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 24299,
                          "name": "HEVM_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "1891:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24298,
                        "name": "CheatCodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24192,
                        "src": "1880:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CheatCodes_$24192_$",
                          "typeString": "type(contract CheatCodes)"
                        }
                      },
                      "id": 24300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1880:24:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CheatCodes_$24192",
                        "typeString": "contract CheatCodes"
                      }
                    },
                    "src": "1871:33:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CheatCodes_$24192",
                      "typeString": "contract CheatCodes"
                    }
                  },
                  "id": 24302,
                  "nodeType": "ExpressionStatement",
                  "src": "1871:33:25"
                },
                {
                  "expression": {
                    "id": 24314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24303,
                      "name": "btcUsdPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24237,
                      "src": "1914:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                        "typeString": "contract MockV3Aggregator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "38",
                          "id": 24307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1953:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_2000000000000_by_1",
                            "typeString": "int_const 2000000000000"
                          },
                          "id": 24312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32305f303030",
                            "id": 24308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1956:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20000_by_1",
                              "typeString": "int_const 20000"
                            },
                            "value": "20_000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            },
                            "id": 24311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 24309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1965:2:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "38",
                              "id": 24310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1969:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8_by_1",
                                "typeString": "int_const 8"
                              },
                              "value": "8"
                            },
                            "src": "1965:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            }
                          },
                          "src": "1956:14:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000000000000_by_1",
                            "typeString": "int_const 2000000000000"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          {
                            "typeIdentifier": "t_rational_2000000000000_by_1",
                            "typeString": "int_const 2000000000000"
                          }
                        ],
                        "id": 24306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1932:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint8_$_t_int256_$returns$_t_contract$_MockV3Aggregator_$24777_$",
                          "typeString": "function (uint8,int256) returns (contract MockV3Aggregator)"
                        },
                        "typeName": {
                          "id": 24305,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24304,
                            "name": "MockV3Aggregator",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24777,
                            "src": "1936:16:25"
                          },
                          "referencedDeclaration": 24777,
                          "src": "1936:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                            "typeString": "contract MockV3Aggregator"
                          }
                        }
                      },
                      "id": 24313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1932:39:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                        "typeString": "contract MockV3Aggregator"
                      }
                    },
                    "src": "1914:57:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                      "typeString": "contract MockV3Aggregator"
                    }
                  },
                  "id": 24315,
                  "nodeType": "ExpressionStatement",
                  "src": "1914:57:25"
                },
                {
                  "expression": {
                    "id": 24327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24316,
                      "name": "ethUsdPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24240,
                      "src": "1981:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                        "typeString": "contract MockV3Aggregator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "38",
                          "id": 24320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2020:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_100000000000_by_1",
                            "typeString": "int_const 100000000000"
                          },
                          "id": 24325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "315f303030",
                            "id": 24321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2023:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1_000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            },
                            "id": 24324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 24322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2031:2:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "38",
                              "id": 24323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2035:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8_by_1",
                                "typeString": "int_const 8"
                              },
                              "value": "8"
                            },
                            "src": "2031:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            }
                          },
                          "src": "2023:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000_by_1",
                            "typeString": "int_const 100000000000"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          {
                            "typeIdentifier": "t_rational_100000000000_by_1",
                            "typeString": "int_const 100000000000"
                          }
                        ],
                        "id": 24319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1999:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint8_$_t_int256_$returns$_t_contract$_MockV3Aggregator_$24777_$",
                          "typeString": "function (uint8,int256) returns (contract MockV3Aggregator)"
                        },
                        "typeName": {
                          "id": 24318,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24317,
                            "name": "MockV3Aggregator",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24777,
                            "src": "2003:16:25"
                          },
                          "referencedDeclaration": 24777,
                          "src": "2003:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                            "typeString": "contract MockV3Aggregator"
                          }
                        }
                      },
                      "id": 24326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1999:38:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                        "typeString": "contract MockV3Aggregator"
                      }
                    },
                    "src": "1981:56:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                      "typeString": "contract MockV3Aggregator"
                    }
                  },
                  "id": 24328,
                  "nodeType": "ExpressionStatement",
                  "src": "1981:56:25"
                },
                {
                  "expression": {
                    "id": 24340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24329,
                      "name": "bnbUsdPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24243,
                      "src": "2047:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                        "typeString": "contract MockV3Aggregator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "38",
                          "id": 24333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2086:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_20000000000_by_1",
                            "typeString": "int_const 20000000000"
                          },
                          "id": 24338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "325f3030",
                            "id": 24334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2089:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            },
                            "value": "2_00"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            },
                            "id": 24337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 24335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2096:2:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "38",
                              "id": 24336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2100:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8_by_1",
                                "typeString": "int_const 8"
                              },
                              "value": "8"
                            },
                            "src": "2096:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            }
                          },
                          "src": "2089:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000000000_by_1",
                            "typeString": "int_const 20000000000"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          {
                            "typeIdentifier": "t_rational_20000000000_by_1",
                            "typeString": "int_const 20000000000"
                          }
                        ],
                        "id": 24332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2065:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint8_$_t_int256_$returns$_t_contract$_MockV3Aggregator_$24777_$",
                          "typeString": "function (uint8,int256) returns (contract MockV3Aggregator)"
                        },
                        "typeName": {
                          "id": 24331,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24330,
                            "name": "MockV3Aggregator",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24777,
                            "src": "2069:16:25"
                          },
                          "referencedDeclaration": 24777,
                          "src": "2069:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                            "typeString": "contract MockV3Aggregator"
                          }
                        }
                      },
                      "id": 24339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2065:37:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                        "typeString": "contract MockV3Aggregator"
                      }
                    },
                    "src": "2047:55:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                      "typeString": "contract MockV3Aggregator"
                    }
                  },
                  "id": 24341,
                  "nodeType": "ExpressionStatement",
                  "src": "2047:55:25"
                },
                {
                  "expression": {
                    "id": 24347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24342,
                      "name": "collection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24246,
                      "src": "2113:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockCollection_$24219",
                        "typeString": "contract MockCollection"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2126:18:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockCollection_$24219_$",
                          "typeString": "function () returns (contract MockCollection)"
                        },
                        "typeName": {
                          "id": 24344,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24343,
                            "name": "MockCollection",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24219,
                            "src": "2130:14:25"
                          },
                          "referencedDeclaration": 24219,
                          "src": "2130:14:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockCollection_$24219",
                            "typeString": "contract MockCollection"
                          }
                        }
                      },
                      "id": 24346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2126:20:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockCollection_$24219",
                        "typeString": "contract MockCollection"
                      }
                    },
                    "src": "2113:33:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockCollection_$24219",
                      "typeString": "contract MockCollection"
                    }
                  },
                  "id": 24348,
                  "nodeType": "ExpressionStatement",
                  "src": "2113:33:25"
                },
                {
                  "expression": {
                    "id": 24357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24349,
                      "name": "aliceNftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24251,
                      "src": "2156:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 24354,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24229,
                              "src": "2195:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2187:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24352,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2187:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2187:14:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 24350,
                          "name": "collection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24246,
                          "src": "2169:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockCollection_$24219",
                            "typeString": "contract MockCollection"
                          }
                        },
                        "id": 24351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintTo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24218,
                        "src": "2169:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) payable external returns (uint256)"
                        }
                      },
                      "id": 24356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2169:33:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2156:46:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24358,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:46:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24364,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24229,
                            "src": "2233:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2225:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24362,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2225:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2225:14:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24359,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24234,
                        "src": "2212:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$24192",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 24361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24150,
                      "src": "2212:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2212:28:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24367,
                  "nodeType": "ExpressionStatement",
                  "src": "2212:28:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24373,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24227,
                            "src": "2287:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$23581",
                              "typeString": "contract Exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Exchange_$23581",
                              "typeString": "contract Exchange"
                            }
                          ],
                          "id": 24372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2279:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24371,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2279:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2279:17:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2298:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24368,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24246,
                        "src": "2250:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockCollection_$24219",
                          "typeString": "contract MockCollection"
                        }
                      },
                      "id": 24370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21767,
                      "src": "2250:28:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 24376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2250:53:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24377,
                  "nodeType": "ExpressionStatement",
                  "src": "2250:53:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24383,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24246,
                            "src": "2358:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockCollection_$24219",
                              "typeString": "contract MockCollection"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockCollection_$24219",
                              "typeString": "contract MockCollection"
                            }
                          ],
                          "id": 24382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2350:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24381,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2350:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2350:19:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24378,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24227,
                        "src": "2314:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$23581",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 24380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPredictionMarketAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23339,
                      "src": "2314:35:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2314:56:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24386,
                  "nodeType": "ExpressionStatement",
                  "src": "2314:56:25"
                },
                {
                  "expression": {
                    "id": 24406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24387,
                      "name": "aliceMakerAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24249,
                      "src": "2381:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MakerOrder_$24122_storage",
                        "typeString": "struct OrderTypes.MakerOrder storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 24390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2419:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 24391,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24229,
                          "src": "2425:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 24392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2432:7:25",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "id": 24393,
                          "name": "aliceNftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24251,
                          "src": "2441:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 24394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2453:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31303030",
                          "id": 24395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2456:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        {
                          "arguments": [
                            {
                              "id": 24398,
                              "name": "ethUsdPriceFeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24240,
                              "src": "2470:15:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                                "typeString": "contract MockV3Aggregator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                                "typeString": "contract MockV3Aggregator"
                              }
                            ],
                            "id": 24397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2462:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24396,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2462:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2462:24:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_120000000000_by_1",
                            "typeString": "int_const 120000000000"
                          },
                          "id": 24404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "315f323030",
                            "id": 24400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2488:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1200_by_1",
                              "typeString": "int_const 1200"
                            },
                            "value": "1_200"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            },
                            "id": 24403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 24401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2496:2:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "38",
                              "id": 24402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2500:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8_by_1",
                                "typeString": "int_const 8"
                              },
                              "value": "8"
                            },
                            "src": "2496:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            }
                          },
                          "src": "2488:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_120000000000_by_1",
                            "typeString": "int_const 120000000000"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_120000000000_by_1",
                            "typeString": "int_const 120000000000"
                          }
                        ],
                        "expression": {
                          "id": 24388,
                          "name": "OrderTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24132,
                          "src": "2397:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OrderTypes_$24132_$",
                            "typeString": "type(library OrderTypes)"
                          }
                        },
                        "id": 24389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "MakerOrder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24122,
                        "src": "2397:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MakerOrder_$24122_storage_ptr_$",
                          "typeString": "type(struct OrderTypes.MakerOrder storage pointer)"
                        }
                      },
                      "id": 24405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2397:105:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MakerOrder_$24122_memory_ptr",
                        "typeString": "struct OrderTypes.MakerOrder memory"
                      }
                    },
                    "src": "2381:121:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MakerOrder_$24122_storage",
                      "typeString": "struct OrderTypes.MakerOrder storage ref"
                    }
                  },
                  "id": 24407,
                  "nodeType": "ExpressionStatement",
                  "src": "2381:121:25"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 24409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1642:5:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1647:2:25"
            },
            "returnParameters": {
              "id": 24253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1657:0:25"
            },
            "scope": 24577,
            "src": "1633:876:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24440,
              "nodeType": "Block",
              "src": "2555:214:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24415,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24229,
                        "src": "2578:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24412,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24234,
                        "src": "2565:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$24192",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 24414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24150,
                      "src": "2565:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2565:19:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24417,
                  "nodeType": "ExpressionStatement",
                  "src": "2565:19:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24421,
                        "name": "aliceMakerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24249,
                        "src": "2618:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MakerOrder_$24122_storage",
                          "typeString": "struct OrderTypes.MakerOrder storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MakerOrder_$24122_storage",
                          "typeString": "struct OrderTypes.MakerOrder storage ref"
                        }
                      ],
                      "expression": {
                        "id": 24418,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24227,
                        "src": "2594:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$23581",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 24420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createMakerAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23385,
                      "src": "2594:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_MakerOrder_$24122_memory_ptr_$returns$__$",
                        "typeString": "function (struct OrderTypes.MakerOrder memory) external"
                      }
                    },
                    "id": 24422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2594:38:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24423,
                  "nodeType": "ExpressionStatement",
                  "src": "2594:38:25"
                },
                {
                  "assignments": [
                    24428
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24428,
                      "mutability": "mutable",
                      "name": "makerAsk",
                      "nameLocation": "2671:8:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 24440,
                      "src": "2642:37:25",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MakerOrder_$24122_memory_ptr",
                        "typeString": "struct OrderTypes.MakerOrder"
                      },
                      "typeName": {
                        "id": 24427,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24426,
                          "name": "OrderTypes.MakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24122,
                          "src": "2642:21:25"
                        },
                        "referencedDeclaration": 24122,
                        "src": "2642:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MakerOrder_$24122_storage_ptr",
                          "typeString": "struct OrderTypes.MakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24433,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24431,
                        "name": "aliceNftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24251,
                        "src": "2703:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24429,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24227,
                        "src": "2682:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$23581",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 24430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMakerAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23580,
                      "src": "2682:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_MakerOrder_$24122_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct OrderTypes.MakerOrder memory)"
                      }
                    },
                    "id": 24432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2682:32:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MakerOrder_$24122_memory_ptr",
                      "typeString": "struct OrderTypes.MakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2642:72:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24435,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24428,
                          "src": "2733:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MakerOrder_$24122_memory_ptr",
                            "typeString": "struct OrderTypes.MakerOrder memory"
                          }
                        },
                        "id": 24436,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24113,
                        "src": "2733:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24437,
                        "name": "aliceNftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24251,
                        "src": "2751:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24434,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2507,
                        2532,
                        2545,
                        2561,
                        2603,
                        2645,
                        2687,
                        2724,
                        2761,
                        2798,
                        366,
                        391,
                        421,
                        446,
                        505,
                        530,
                        560,
                        585,
                        1685,
                        1720
                      ],
                      "referencedDeclaration": 560,
                      "src": "2724:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2724:38:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24439,
                  "nodeType": "ExpressionStatement",
                  "src": "2724:38:25"
                }
              ]
            },
            "functionSelector": "c2ddc81f",
            "id": 24441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCanCreateMakerAsk",
            "nameLocation": "2524:21:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2545:2:25"
            },
            "returnParameters": {
              "id": 24411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2555:0:25"
            },
            "scope": 24577,
            "src": "2515:254:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24511,
              "nodeType": "Block",
              "src": "2817:485:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24447,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24229,
                        "src": "2845:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24444,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24234,
                        "src": "2827:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$24192",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 24446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24170,
                      "src": "2827:17:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2827:24:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24449,
                  "nodeType": "ExpressionStatement",
                  "src": "2827:24:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24453,
                        "name": "aliceMakerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24249,
                        "src": "2885:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MakerOrder_$24122_storage",
                          "typeString": "struct OrderTypes.MakerOrder storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MakerOrder_$24122_storage",
                          "typeString": "struct OrderTypes.MakerOrder storage ref"
                        }
                      ],
                      "expression": {
                        "id": 24450,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24227,
                        "src": "2861:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$23581",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 24452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createMakerAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23385,
                      "src": "2861:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_MakerOrder_$24122_memory_ptr_$returns$__$",
                        "typeString": "function (struct OrderTypes.MakerOrder memory) external"
                      }
                    },
                    "id": 24454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2861:38:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24455,
                  "nodeType": "ExpressionStatement",
                  "src": "2861:38:25"
                },
                {
                  "assignments": [
                    24460
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24460,
                      "mutability": "mutable",
                      "name": "makerAsk",
                      "nameLocation": "2938:8:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 24511,
                      "src": "2909:37:25",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MakerOrder_$24122_memory_ptr",
                        "typeString": "struct OrderTypes.MakerOrder"
                      },
                      "typeName": {
                        "id": 24459,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24458,
                          "name": "OrderTypes.MakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24122,
                          "src": "2909:21:25"
                        },
                        "referencedDeclaration": 24122,
                        "src": "2909:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MakerOrder_$24122_storage_ptr",
                          "typeString": "struct OrderTypes.MakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24465,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24463,
                        "name": "aliceNftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24251,
                        "src": "2970:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24461,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24227,
                        "src": "2949:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$23581",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 24462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMakerAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23580,
                      "src": "2949:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_MakerOrder_$24122_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct OrderTypes.MakerOrder memory)"
                      }
                    },
                    "id": 24464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2949:32:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MakerOrder_$24122_memory_ptr",
                      "typeString": "struct OrderTypes.MakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2909:72:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24467,
                          "name": "makerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24460,
                          "src": "3000:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MakerOrder_$24122_memory_ptr",
                            "typeString": "struct OrderTypes.MakerOrder memory"
                          }
                        },
                        "id": 24468,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24111,
                        "src": "3000:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 24469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3016:7:25",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 24466,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2507,
                        2532,
                        2545,
                        2561,
                        2603,
                        2645,
                        2687,
                        2724,
                        2761,
                        2798,
                        366,
                        391,
                        421,
                        446,
                        505,
                        530,
                        560,
                        585,
                        1685,
                        1720
                      ],
                      "referencedDeclaration": 560,
                      "src": "2991:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2991:33:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24471,
                  "nodeType": "ExpressionStatement",
                  "src": "2991:33:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
                            "id": 24477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3080:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          {
                            "id": 24478,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24229,
                            "src": "3086:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "35",
                            "id": 24479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3093:7:25",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5000000000000000000_by_1",
                              "typeString": "int_const 5000000000000000000"
                            },
                            "value": "5"
                          },
                          {
                            "id": 24480,
                            "name": "aliceNftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24251,
                            "src": "3102:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 24481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3114:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "31303030",
                            "id": 24482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3117:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          {
                            "arguments": [
                              {
                                "id": 24485,
                                "name": "ethUsdPriceFeed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24240,
                                "src": "3131:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                                  "typeString": "contract MockV3Aggregator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockV3Aggregator_$24777",
                                  "typeString": "contract MockV3Aggregator"
                                }
                              ],
                              "id": 24484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3123:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24483,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3123:7:25",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3123:24:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_120000000000_by_1",
                              "typeString": "int_const 120000000000"
                            },
                            "id": 24491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "315f323030",
                              "id": 24487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3149:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1200_by_1",
                                "typeString": "int_const 1200"
                              },
                              "value": "1_200"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              },
                              "id": 24490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 24488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3157:2:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "38",
                                "id": 24489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3161:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                },
                                "value": "8"
                              },
                              "src": "3157:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              }
                            },
                            "src": "3149:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_120000000000_by_1",
                              "typeString": "int_const 120000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_5000000000000000000_by_1",
                              "typeString": "int_const 5000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_120000000000_by_1",
                              "typeString": "int_const 120000000000"
                            }
                          ],
                          "expression": {
                            "id": 24475,
                            "name": "OrderTypes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24132,
                            "src": "3058:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_OrderTypes_$24132_$",
                              "typeString": "type(library OrderTypes)"
                            }
                          },
                          "id": 24476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MakerOrder",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24122,
                          "src": "3058:21:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_MakerOrder_$24122_storage_ptr_$",
                            "typeString": "type(struct OrderTypes.MakerOrder storage pointer)"
                          }
                        },
                        "id": 24492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3058:105:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MakerOrder_$24122_memory_ptr",
                          "typeString": "struct OrderTypes.MakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MakerOrder_$24122_memory_ptr",
                          "typeString": "struct OrderTypes.MakerOrder memory"
                        }
                      ],
                      "expression": {
                        "id": 24472,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24227,
                        "src": "3034:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$23581",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 24474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createMakerAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23385,
                      "src": "3034:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_MakerOrder_$24122_memory_ptr_$returns$__$",
                        "typeString": "function (struct OrderTypes.MakerOrder memory) external"
                      }
                    },
                    "id": 24493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3034:130:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24494,
                  "nodeType": "ExpressionStatement",
                  "src": "3034:130:25"
                },
                {
                  "assignments": [
                    24499
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24499,
                      "mutability": "mutable",
                      "name": "newMakerAsk",
                      "nameLocation": "3203:11:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 24511,
                      "src": "3174:40:25",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MakerOrder_$24122_memory_ptr",
                        "typeString": "struct OrderTypes.MakerOrder"
                      },
                      "typeName": {
                        "id": 24498,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24497,
                          "name": "OrderTypes.MakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24122,
                          "src": "3174:21:25"
                        },
                        "referencedDeclaration": 24122,
                        "src": "3174:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MakerOrder_$24122_storage_ptr",
                          "typeString": "struct OrderTypes.MakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24504,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24502,
                        "name": "aliceNftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24251,
                        "src": "3238:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24500,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24227,
                        "src": "3217:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$23581",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 24501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMakerAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23580,
                      "src": "3217:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_MakerOrder_$24122_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct OrderTypes.MakerOrder memory)"
                      }
                    },
                    "id": 24503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3217:32:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MakerOrder_$24122_memory_ptr",
                      "typeString": "struct OrderTypes.MakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3174:75:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24506,
                          "name": "newMakerAsk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24499,
                          "src": "3268:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MakerOrder_$24122_memory_ptr",
                            "typeString": "struct OrderTypes.MakerOrder memory"
                          }
                        },
                        "id": 24507,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24111,
                        "src": "3268:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 24508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3287:7:25",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "id": 24505,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2507,
                        2532,
                        2545,
                        2561,
                        2603,
                        2645,
                        2687,
                        2724,
                        2761,
                        2798,
                        366,
                        391,
                        421,
                        446,
                        505,
                        530,
                        560,
                        585,
                        1685,
                        1720
                      ],
                      "referencedDeclaration": 560,
                      "src": "3259:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3259:36:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24510,
                  "nodeType": "ExpressionStatement",
                  "src": "3259:36:25"
                }
              ]
            },
            "functionSelector": "7201130d",
            "id": 24512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCanOverrideMakerAsk",
            "nameLocation": "2784:23:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2807:2:25"
            },
            "returnParameters": {
              "id": 24443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2817:0:25"
            },
            "scope": 24577,
            "src": "2775:527:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24575,
              "nodeType": "Block",
              "src": "3349:438:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24518,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24229,
                        "src": "3372:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24515,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24234,
                        "src": "3359:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$24192",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 24517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24150,
                      "src": "3359:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3359:19:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24520,
                  "nodeType": "ExpressionStatement",
                  "src": "3359:19:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24524,
                        "name": "aliceMakerAsk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24249,
                        "src": "3412:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MakerOrder_$24122_storage",
                          "typeString": "struct OrderTypes.MakerOrder storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MakerOrder_$24122_storage",
                          "typeString": "struct OrderTypes.MakerOrder storage ref"
                        }
                      ],
                      "expression": {
                        "id": 24521,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24227,
                        "src": "3388:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$23581",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 24523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createMakerAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23385,
                      "src": "3388:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_MakerOrder_$24122_memory_ptr_$returns$__$",
                        "typeString": "function (struct OrderTypes.MakerOrder memory) external"
                      }
                    },
                    "id": 24525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3388:38:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24526,
                  "nodeType": "ExpressionStatement",
                  "src": "3388:38:25"
                },
                {
                  "assignments": [
                    24531
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24531,
                      "mutability": "mutable",
                      "name": "takerBid",
                      "nameLocation": "3466:8:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 24575,
                      "src": "3437:37:25",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$24131_memory_ptr",
                        "typeString": "struct OrderTypes.TakerOrder"
                      },
                      "typeName": {
                        "id": 24530,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24529,
                          "name": "OrderTypes.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24131,
                          "src": "3437:21:25"
                        },
                        "referencedDeclaration": 24131,
                        "src": "3437:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$24131_storage_ptr",
                          "typeString": "struct OrderTypes.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24539,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 24534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3499:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 24535,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24231,
                        "src": "3506:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 24536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3511:7:25",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "id": 24537,
                        "name": "aliceNftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24251,
                        "src": "3520:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24532,
                        "name": "OrderTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24132,
                        "src": "3477:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OrderTypes_$24132_$",
                          "typeString": "type(library OrderTypes)"
                        }
                      },
                      "id": 24533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24131,
                      "src": "3477:21:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$24131_storage_ptr_$",
                        "typeString": "type(struct OrderTypes.TakerOrder storage pointer)"
                      }
                    },
                    "id": 24538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3477:54:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$24131_memory_ptr",
                      "typeString": "struct OrderTypes.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3437:94:25"
                },
                {
                  "assignments": [
                    24541
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24541,
                      "mutability": "mutable",
                      "name": "aliceBefore",
                      "nameLocation": "3549:11:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 24575,
                      "src": "3541:19:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24540,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3541:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24544,
                  "initialValue": {
                    "expression": {
                      "id": 24542,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24229,
                      "src": "3563:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "3563:13:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3541:35:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24548,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24231,
                        "src": "3599:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24545,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24234,
                        "src": "3586:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$24192",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 24547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24150,
                      "src": "3586:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3586:17:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24550,
                  "nodeType": "ExpressionStatement",
                  "src": "3586:17:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24556,
                        "name": "takerBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24531,
                        "src": "3659:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$24131_memory_ptr",
                          "typeString": "struct OrderTypes.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$24131_memory_ptr",
                          "typeString": "struct OrderTypes.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$24131_memory_ptr",
                            "typeString": "struct OrderTypes.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 24551,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24227,
                          "src": "3613:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$23581",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 24553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "matchAskWithTakerBid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23506,
                        "src": "3613:29:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$24131_memory_ptr_$returns$__$",
                          "typeString": "function (struct OrderTypes.TakerOrder memory) payable external"
                        }
                      },
                      "id": 24555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 24554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3650:7:25",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "3613:45:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$24131_memory_ptr_$returns$__$value",
                        "typeString": "function (struct OrderTypes.TakerOrder memory) payable external"
                      }
                    },
                    "id": 24557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3613:55:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24558,
                  "nodeType": "ExpressionStatement",
                  "src": "3613:55:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24562,
                            "name": "aliceNftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24251,
                            "src": "3707:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 24560,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24246,
                            "src": "3688:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockCollection_$24219",
                              "typeString": "contract MockCollection"
                            }
                          },
                          "id": 24561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21621,
                          "src": "3688:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 24563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3688:30:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24564,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24231,
                        "src": "3720:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24559,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2507,
                        2532,
                        2545,
                        2561,
                        2603,
                        2645,
                        2687,
                        2724,
                        2761,
                        2798,
                        366,
                        391,
                        421,
                        446,
                        505,
                        530,
                        560,
                        585,
                        1685,
                        1720
                      ],
                      "referencedDeclaration": 366,
                      "src": "3679:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 24565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3679:45:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24566,
                  "nodeType": "ExpressionStatement",
                  "src": "3679:45:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24568,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24229,
                          "src": "3743:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 24569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "3743:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24570,
                          "name": "aliceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24541,
                          "src": "3758:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 24571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3772:7:25",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "3758:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24567,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2507,
                        2532,
                        2545,
                        2561,
                        2603,
                        2645,
                        2687,
                        2724,
                        2761,
                        2798,
                        366,
                        391,
                        421,
                        446,
                        505,
                        530,
                        560,
                        585,
                        1685,
                        1720
                      ],
                      "referencedDeclaration": 560,
                      "src": "3734:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3734:46:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24574,
                  "nodeType": "ExpressionStatement",
                  "src": "3734:46:25"
                }
              ]
            },
            "functionSelector": "b82e287d",
            "id": 24576,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCanMatchAskWithBid",
            "nameLocation": "3317:22:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3339:2:25"
            },
            "returnParameters": {
              "id": 24514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3349:0:25"
            },
            "scope": 24577,
            "src": "3308:479:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 24585,
        "src": "1162:2627:25",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24578,
              "name": "ERC721Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22652,
              "src": "3812:12:25"
            },
            "id": 24579,
            "nodeType": "InheritanceSpecifier",
            "src": "3812:12:25"
          }
        ],
        "canonicalName": "Receiver",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24584,
        "linearizedBaseContracts": [
          24584,
          22652,
          22473
        ],
        "name": "Receiver",
        "nameLocation": "3800:8:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 24582,
              "nodeType": "Block",
              "src": "3858:2:25",
              "statements": []
            },
            "id": 24583,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3838:2:25"
            },
            "returnParameters": {
              "id": 24581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3858:0:25"
            },
            "scope": 24584,
            "src": "3831:29:25",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 24585,
        "src": "3791:71:25",
        "usedErrors": []
      }
    ],
    "src": "39:3824:25"
  }
}